{"ast":null,"code":"var _jsxFileName = \"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/part6/src/App.js\",\n  _s = $RefreshSig$();\n// import { createNote, toggleImportanceOf } from './reducers/noteReducer'\n// import { useSelector, useDispatch } from 'react-redux'\n\n// const App = () => {\n//   const dispatch = useDispatch()\n//   const notes = useSelector(state => state)\n\n//   const addNote = (event) => {\n//     event.preventDefault()\n//     const content = event.target.note.value\n//     event.target.note.value = ''\n//     dispatch(createNote(content))\n//   }\n\n//   const toggleImportance = (id) => {\n//     dispatch(toggleImportanceOf(id))\n//   }\n\n//   return(\n//     <div>\n//       <form onSubmit={addNote}>\n//         <input name=\"note\" /> \n//         <button type=\"submit\">add</button>\n//       </form>\n//       <ul>\n//         {notes.map(note=>\n//           <li key={note.id} onClick={() => toggleImportance(note.id)}>\n//             {note.content} <strong>{note.important ? 'important' : ''}</strong>\n//           </li>\n//         )}\n//         </ul>\n//     </div>\n//   )\n// }\n\n// export default App\nimport { useSelector, useDispatch } from 'react-redux';\nimport Notes from \"./components/Notes\";\nimport NewNote from \"./components/NewNote\";\nimport NoteReducer from \"./reducers/noteReducer\";\n// import counterReducer from \"./counterReducer\"\n\nimport { createStore } from 'redux';\n\n// const counterReducer = (state = 0, action) => {\n//     switch (action.type) {\n//       case 'INCREMENT':\n//         return state + 1\n//       case 'DECREMENT':\n//         return state - 1\n//       case 'ZERO':\n//         return 0\n//       default: // if none of the above matches, code comes here\n//       // console.log('state:', state)\n//         return state\n//     }\n//   }\n\n// const dispatch = useDispatch();\n//   const goodCount = useSelector(state => state.good);\n//   const okCount = useSelector(state => state.ok);\n//   const badCount = useSelector(state => state.bad);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const dispatch = useDispatch();\n  const initialState = {\n    good: 0,\n    ok: 0,\n    bad: 0\n  };\n  const handleGoodClick = () => {\n    dispatch({\n      type: 'GOOD'\n    });\n  };\n  const counterReducer = function () {\n    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    let action = arguments.length > 1 ? arguments[1] : undefined;\n    switch (action.type) {\n      case 'GOOD':\n        return {\n          ...state,\n          good: state.good + 1\n        };\n      case 'OK':\n        return {\n          ...state,\n          ok: state.ok + 1\n        };\n      case 'BAD':\n        return {\n          ...state,\n          bad: state.bad + 1\n        };\n      case 'ZERO':\n        return initialState;\n      default:\n        return state;\n    }\n  };\n\n  //  const store = createStore(counterReducer)\n  //   store.subscribe(() => {\n  //     const storeNow = store.getState()\n  //     console.log('storeNow:', storeNow)\n  //   }) \n\n  // return(\n  //   <div>\n  //     <button onClick={() => store.dispatch({ type: 'GOOD' })}>Good</button>\n\n  //       <button>ok</button> \n  //       <button>bad</button>\n  //       <button>reset stats</button>\n  //       <div>good {store.getState().good}</div>\n  //       <div>ok</div>\n  //       <div>bad</div>\n  //     </div>\n  // )\n\n  const goodCount = useSelector(state => state.good);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'GOOD'\n      }),\n      children: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'OK'\n      }),\n      children: \"ok\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'BAD'\n      }),\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'ZERO'\n      }),\n      children: \"reset stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"good \", goodCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"ok \", okCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"bad \", badCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"I3hMqWnvD2AXgkHz9xoGPqZ8thk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","useDispatch","Notes","NewNote","NoteReducer","createStore","jsxDEV","_jsxDEV","App","_s","dispatch","initialState","good","ok","bad","handleGoodClick","type","counterReducer","state","arguments","length","undefined","action","goodCount","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","okCount","badCount","_c","$RefreshReg$"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/part6/src/App.js"],"sourcesContent":["// import { createNote, toggleImportanceOf } from './reducers/noteReducer'\n// import { useSelector, useDispatch } from 'react-redux'\n\n// const App = () => {\n//   const dispatch = useDispatch()\n//   const notes = useSelector(state => state)\n\n//   const addNote = (event) => {\n//     event.preventDefault()\n//     const content = event.target.note.value\n//     event.target.note.value = ''\n//     dispatch(createNote(content))\n//   }\n\n//   const toggleImportance = (id) => {\n//     dispatch(toggleImportanceOf(id))\n//   }\n\n//   return(\n//     <div>\n//       <form onSubmit={addNote}>\n//         <input name=\"note\" /> \n//         <button type=\"submit\">add</button>\n//       </form>\n//       <ul>\n//         {notes.map(note=>\n//           <li key={note.id} onClick={() => toggleImportance(note.id)}>\n//             {note.content} <strong>{note.important ? 'important' : ''}</strong>\n//           </li>\n//         )}\n//         </ul>\n//     </div>\n//   )\n// }\n\n// export default App\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nimport Notes from \"./components/Notes\"\nimport NewNote from \"./components/NewNote\"\nimport NoteReducer from \"./reducers/noteReducer\"\n// import counterReducer from \"./counterReducer\"\n\n\nimport { createStore } from 'redux'\n\n// const counterReducer = (state = 0, action) => {\n//     switch (action.type) {\n//       case 'INCREMENT':\n//         return state + 1\n//       case 'DECREMENT':\n//         return state - 1\n//       case 'ZERO':\n//         return 0\n//       default: // if none of the above matches, code comes here\n//       // console.log('state:', state)\n//         return state\n//     }\n//   }\n\n// const dispatch = useDispatch();\n//   const goodCount = useSelector(state => state.good);\n//   const okCount = useSelector(state => state.ok);\n//   const badCount = useSelector(state => state.bad);\nconst App = () => {\n\nconst dispatch = useDispatch()\n\nconst initialState = {\n  good: 0,\n  ok: 0,\n  bad: 0\n}\n\nconst handleGoodClick = () => {\n  dispatch({ type: 'GOOD' });\n};\n\n\n\n  const counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GOOD':\n      return { ...state, good: state.good + 1 }\n    case 'OK':\n      return { ...state, ok: state.ok + 1 }\n    case 'BAD':\n      return { ...state, bad: state.bad + 1 }\n    case 'ZERO':\n      return initialState\n    default:\n      return state\n  }\n}\n\n//  const store = createStore(counterReducer)\n//   store.subscribe(() => {\n//     const storeNow = store.getState()\n//     console.log('storeNow:', storeNow)\n//   }) \n  \n  \n  // return(\n  //   <div>\n  //     <button onClick={() => store.dispatch({ type: 'GOOD' })}>Good</button>\n\n  //       <button>ok</button> \n  //       <button>bad</button>\n  //       <button>reset stats</button>\n  //       <div>good {store.getState().good}</div>\n  //       <div>ok</div>\n  //       <div>bad</div>\n  //     </div>\n  // )\n\n  const goodCount = useSelector(state => state.good);\n\nreturn(\n  <div>\n    <button onClick={() => dispatch({ type: 'GOOD' })}>Good</button>\n    <button onClick={() => dispatch({ type: 'OK' })}>ok</button> \n    <button onClick={() => dispatch({ type: 'BAD' })}>bad</button>\n    <button onClick={() => dispatch({ type: 'ZERO' })}>reset stats</button>\n    <div>good {goodCount}</div>\n    <div>ok {okCount}</div>\n    <div>bad {badCount}</div>\n  </div>\n);\n\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}