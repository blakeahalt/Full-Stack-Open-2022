{"ast":null,"code":"var _jsxFileName = \"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/part6/src/App.js\";\n// import { createNote, toggleImportanceOf } from './reducers/noteReducer'\n// import { useSelector, useDispatch } from 'react-redux'\n\n// const App = () => {\n//   const dispatch = useDispatch()\n//   const notes = useSelector(state => state)\n\n//   const addNote = (event) => {\n//     event.preventDefault()\n//     const content = event.target.note.value\n//     event.target.note.value = ''\n//     dispatch(createNote(content))\n//   }\n\n//   const toggleImportance = (id) => {\n//     dispatch(toggleImportanceOf(id))\n//   }\n\n//   return(\n//     <div>\n//       <form onSubmit={addNote}>\n//         <input name=\"note\" /> \n//         <button type=\"submit\">add</button>\n//       </form>\n//       <ul>\n//         {notes.map(note=>\n//           <li key={note.id} onClick={() => toggleImportance(note.id)}>\n//             {note.content} <strong>{note.important ? 'important' : ''}</strong>\n//           </li>\n//         )}\n//         </ul>\n//     </div>\n//   )\n// }\n\n// export default App\nimport { useSelector, useDispatch } from 'react-redux';\nimport Notes from \"./components/Notes\";\nimport NewNote from \"./components/NewNote\";\nimport NoteReducer from \"./reducers/noteReducer\";\n// import counterReducer from \"./counterReducer\"\n\nimport { createStore } from 'redux';\n\n// const counterReducer = (state = 0, action) => {\n//     switch (action.type) {\n//       case 'INCREMENT':\n//         return state + 1\n//       case 'DECREMENT':\n//         return state - 1\n//       case 'ZERO':\n//         return 0\n//       default: // if none of the above matches, code comes here\n//       // console.log('state:', state)\n//         return state\n//     }\n//   }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dispatch = useDispatch();\nconst goodCount = useSelector(state => state.good);\nconst okCount = useSelector(state => state.ok);\nconst badCount = useSelector(state => state.bad);\nconst initialState = {\n  good: 0,\n  ok: 0,\n  bad: 0\n};\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'GOOD':\n      return {\n        ...state,\n        good: state.good + 1\n      };\n    case 'OK':\n      return {\n        ...state,\n        ok: state.ok + 1\n      };\n    case 'BAD':\n      return {\n        ...state,\n        bad: state.bad + 1\n      };\n    case 'ZERO':\n      return initialState;\n    default:\n      return state;\n  }\n};\nconst store = createStore(counterReducer);\nstore.subscribe(() => {\n  const storeNow = store.getState();\n  console.log('storeNow:', storeNow);\n});\n// console.log('store.getState():', store.getState())\n// store.dispatch({ type: 'INCREMENT' })\n// store.dispatch({ type: 'INCREMENT' })\n// store.dispatch({ type: 'INCREMENT' })\n// console.log(store.getState())\n// store.dispatch({ type: 'ZERO' })\n// store.dispatch({ type: 'DECREMENT' })\n// console.log(store.getState())\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => store.dispatch({\n        type: 'GOOD'\n      }),\n      children: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"ok\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"reset stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"good \", store.getState().good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"ok\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","useDispatch","Notes","NewNote","NoteReducer","createStore","jsxDEV","_jsxDEV","dispatch","goodCount","state","good","okCount","ok","badCount","bad","initialState","counterReducer","arguments","length","undefined","action","type","store","subscribe","storeNow","getState","console","log","App","children","onClick","e","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/part6/src/App.js"],"sourcesContent":["// import { createNote, toggleImportanceOf } from './reducers/noteReducer'\n// import { useSelector, useDispatch } from 'react-redux'\n\n// const App = () => {\n//   const dispatch = useDispatch()\n//   const notes = useSelector(state => state)\n\n//   const addNote = (event) => {\n//     event.preventDefault()\n//     const content = event.target.note.value\n//     event.target.note.value = ''\n//     dispatch(createNote(content))\n//   }\n\n//   const toggleImportance = (id) => {\n//     dispatch(toggleImportanceOf(id))\n//   }\n\n//   return(\n//     <div>\n//       <form onSubmit={addNote}>\n//         <input name=\"note\" /> \n//         <button type=\"submit\">add</button>\n//       </form>\n//       <ul>\n//         {notes.map(note=>\n//           <li key={note.id} onClick={() => toggleImportance(note.id)}>\n//             {note.content} <strong>{note.important ? 'important' : ''}</strong>\n//           </li>\n//         )}\n//         </ul>\n//     </div>\n//   )\n// }\n\n// export default App\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nimport Notes from \"./components/Notes\"\nimport NewNote from \"./components/NewNote\"\nimport NoteReducer from \"./reducers/noteReducer\"\n// import counterReducer from \"./counterReducer\"\n\n\nimport { createStore } from 'redux'\n\n// const counterReducer = (state = 0, action) => {\n//     switch (action.type) {\n//       case 'INCREMENT':\n//         return state + 1\n//       case 'DECREMENT':\n//         return state - 1\n//       case 'ZERO':\n//         return 0\n//       default: // if none of the above matches, code comes here\n//       // console.log('state:', state)\n//         return state\n//     }\n//   }\n\nconst dispatch = useDispatch();\n  const goodCount = useSelector(state => state.good);\n  const okCount = useSelector(state => state.ok);\n  const badCount = useSelector(state => state.bad);\n\nconst initialState = {\n  good: 0,\n  ok: 0,\n  bad: 0\n}\n\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GOOD':\n      return { ...state, good: state.good + 1 }\n    case 'OK':\n      return { ...state, ok: state.ok + 1 }\n    case 'BAD':\n      return { ...state, bad: state.bad + 1 }\n    case 'ZERO':\n      return initialState\n    default:\n      return state\n  }\n}\n  \n  \nconst store = createStore(counterReducer)\n  store.subscribe(() => {\n    const storeNow = store.getState()\n    console.log('storeNow:', storeNow)\n  })\n  // console.log('store.getState():', store.getState())\n  // store.dispatch({ type: 'INCREMENT' })\n  // store.dispatch({ type: 'INCREMENT' })\n  // store.dispatch({ type: 'INCREMENT' })\n  // console.log(store.getState())\n  // store.dispatch({ type: 'ZERO' })\n  // store.dispatch({ type: 'DECREMENT' })\n  // console.log(store.getState())\n\n\n\n\n\nconst App = () => {\n  return(\n    <div>\n      <button \n          onClick={e => store.dispatch({ type: 'GOOD' })}\n        >Good</button>\n        <button>ok</button> \n        <button>bad</button>\n        <button>reset stats</button>\n        <div>good {store.getState().good}</div>\n        <div>ok</div>\n        <div>bad</div>\n      </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}