{"ast":null,"code":"var _jsxFileName = \"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/part6/src/App.js\";\n// import { createNote, toggleImportanceOf } from './reducers/noteReducer'\n// import { useSelector, useDispatch } from 'react-redux'\n\n// const App = () => {\n//   const dispatch = useDispatch()\n//   const notes = useSelector(state => state)\n\n//   const addNote = (event) => {\n//     event.preventDefault()\n//     const content = event.target.note.value\n//     event.target.note.value = ''\n//     dispatch(createNote(content))\n//   }\n\n//   const toggleImportance = (id) => {\n//     dispatch(toggleImportanceOf(id))\n//   }\n\n//   return(\n//     <div>\n//       <form onSubmit={addNote}>\n//         <input name=\"note\" /> \n//         <button type=\"submit\">add</button>\n//       </form>\n//       <ul>\n//         {notes.map(note=>\n//           <li key={note.id} onClick={() => toggleImportance(note.id)}>\n//             {note.content} <strong>{note.important ? 'important' : ''}</strong>\n//           </li>\n//         )}\n//         </ul>\n//     </div>\n//   )\n// }\n\n// export default App\n\nimport Notes from \"./components/Notes\";\nimport NewNote from \"./components/NewNote\";\nimport { createStore } from 'redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1;\n    case 'DECREMENT':\n      return state - 1;\n    case 'ZERO':\n      return 0;\n    default:\n      // if none of the above matches, code comes here\n      return state;\n  }\n};\nconst store = createStore(counterReducer);\nconsole.log(store.getState());\nconsole.log(store.getState());\nstore.dispatch({\n  type: 'INCREMENT'\n});\nstore.dispatch({\n  type: 'INCREMENT'\n});\nstore.dispatch({\n  type: 'INCREMENT'\n});\nconsole.log(store.getState());\nstore.dispatch({\n  type: 'ZERO'\n});\nstore.dispatch({\n  type: 'DECREMENT'\n});\nconsole.log(store.getState());\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewNote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Notes","NewNote","createStore","counterReducer","state","action","type","store","console","log","getState","dispatch","App"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/part6/src/App.js"],"sourcesContent":["// import { createNote, toggleImportanceOf } from './reducers/noteReducer'\n// import { useSelector, useDispatch } from 'react-redux'\n\n// const App = () => {\n//   const dispatch = useDispatch()\n//   const notes = useSelector(state => state)\n\n//   const addNote = (event) => {\n//     event.preventDefault()\n//     const content = event.target.note.value\n//     event.target.note.value = ''\n//     dispatch(createNote(content))\n//   }\n\n//   const toggleImportance = (id) => {\n//     dispatch(toggleImportanceOf(id))\n//   }\n\n//   return(\n//     <div>\n//       <form onSubmit={addNote}>\n//         <input name=\"note\" /> \n//         <button type=\"submit\">add</button>\n//       </form>\n//       <ul>\n//         {notes.map(note=>\n//           <li key={note.id} onClick={() => toggleImportance(note.id)}>\n//             {note.content} <strong>{note.important ? 'important' : ''}</strong>\n//           </li>\n//         )}\n//         </ul>\n//     </div>\n//   )\n// }\n\n// export default App\n\nimport Notes from \"./components/Notes\"\nimport NewNote from \"./components/NewNote\"\n\n\nimport { createStore } from 'redux'\n\nconst counterReducer = (state = 0, action) => {\n    switch (action.type) {\n      case 'INCREMENT':\n        return state + 1\n      case 'DECREMENT':\n        return state - 1\n      case 'ZERO':\n        return 0\n      default: // if none of the above matches, code comes here\n        return state\n    }\n  }\n\nconst store = createStore(counterReducer)\nconsole.log(store.getState())\nconsole.log(store.getState())\nstore.dispatch({ type: 'INCREMENT' })\nstore.dispatch({ type: 'INCREMENT' })\nstore.dispatch({ type: 'INCREMENT' })\nconsole.log(store.getState())\nstore.dispatch({ type: 'ZERO' })\nstore.dispatch({ type: 'DECREMENT' })\nconsole.log(store.getState())\n\n\n\n\nconst App = () => {\n  return(\n    <div>\n      <NewNote />\n      <Notes />\n    </div>\n  )\n}\n\nexport default App"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAG1C,SAASC,WAAW,QAAQ,OAAO;AAAA;AAEnC,MAAMC,cAAc,GAAG,YAAuB;EAAA,IAAtBC,KAAK,uEAAG,CAAC;EAAA,IAAEC,MAAM;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAOF,KAAK,GAAG,CAAC;IAClB,KAAK,WAAW;MACd,OAAOA,KAAK,GAAG,CAAC;IAClB,KAAK,MAAM;MACT,OAAO,CAAC;IACV;MAAS;MACP,OAAOA,KAAK;EAAA;AAElB,CAAC;AAEH,MAAMG,KAAK,GAAGL,WAAW,CAACC,cAAc,CAAC;AACzCK,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,QAAQ,EAAE,CAAC;AAC7BF,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,QAAQ,EAAE,CAAC;AAC7BH,KAAK,CAACI,QAAQ,CAAC;EAAEL,IAAI,EAAE;AAAY,CAAC,CAAC;AACrCC,KAAK,CAACI,QAAQ,CAAC;EAAEL,IAAI,EAAE;AAAY,CAAC,CAAC;AACrCC,KAAK,CAACI,QAAQ,CAAC;EAAEL,IAAI,EAAE;AAAY,CAAC,CAAC;AACrCE,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,QAAQ,EAAE,CAAC;AAC7BH,KAAK,CAACI,QAAQ,CAAC;EAAEL,IAAI,EAAE;AAAO,CAAC,CAAC;AAChCC,KAAK,CAACI,QAAQ,CAAC;EAAEL,IAAI,EAAE;AAAY,CAAC,CAAC;AACrCE,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,QAAQ,EAAE,CAAC;AAK7B,MAAME,GAAG,GAAG,MAAM;EAChB,oBACE;IAAA,wBACE,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eACX,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAA,KAPKA,GAAG;AAST,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}