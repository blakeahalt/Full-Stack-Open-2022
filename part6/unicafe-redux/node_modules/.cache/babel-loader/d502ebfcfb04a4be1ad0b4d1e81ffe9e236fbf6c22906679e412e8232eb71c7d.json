{"ast":null,"code":"// const counterReducer = (state, action) => {\n//     if (action.type === 'INCREMENT') {\n//       return state + 1\n//     } else if (action.type === 'DECREMENT') {\n//       return state - 1\n//     } else if (action.type === 'ZERO') {\n//       return 0\n//     }\n\n//     console.log(counterReducer())\n//     return state\n//   }\n\nimport { createStore } from 'redux';\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1;\n    case 'DECREMENT':\n      return state - 1;\n    case 'ZERO':\n      return 0;\n    default:\n      // if none of the above matches, code comes here\n      console.log(state);\n      return state;\n  }\n};\nconst store = createStore(counterReducer);\nconsole.log(store.getState());\nstore.dispatch({\n  type: 'INCREMENT'\n});\nstore.dispatch({\n  type: 'INCREMENT'\n});\nstore.dispatch({\n  type: 'INCREMENT'\n});\nconsole.log(store.getState());\nstore.dispatch({\n  type: 'ZERO'\n});\nstore.dispatch({\n  type: 'DECREMENT'\n});\nconsole.log(store.getState());","map":{"version":3,"names":["createStore","counterReducer","state","action","type","console","log","store","getState","dispatch"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/part6/src/App_Redux.js"],"sourcesContent":["// const counterReducer = (state, action) => {\n//     if (action.type === 'INCREMENT') {\n//       return state + 1\n//     } else if (action.type === 'DECREMENT') {\n//       return state - 1\n//     } else if (action.type === 'ZERO') {\n//       return 0\n//     }\n  \n//     console.log(counterReducer())\n//     return state\n//   }\n\nimport { createStore } from 'redux'\n\nconst counterReducer = (state = 0, action) => {\n    switch (action.type) {\n      case 'INCREMENT':\n        return state + 1\n      case 'DECREMENT':\n        return state - 1\n      case 'ZERO':\n        return 0\n      default: // if none of the above matches, code comes here\n        console.log(state)\n        return state\n    }\n  }\n\nconst store = createStore(counterReducer)\nconsole.log(store.getState())\nstore.dispatch({ type: 'INCREMENT' })\nstore.dispatch({ type: 'INCREMENT' })\nstore.dispatch({ type: 'INCREMENT' })\nconsole.log(store.getState())\nstore.dispatch({ type: 'ZERO' })\nstore.dispatch({ type: 'DECREMENT' })\nconsole.log(store.getState())\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAASA,WAAW,QAAQ,OAAO;AAEnC,MAAMC,cAAc,GAAG,YAAuB;EAAA,IAAtBC,KAAK,uEAAG,CAAC;EAAA,IAAEC,MAAM;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAOF,KAAK,GAAG,CAAC;IAClB,KAAK,WAAW;MACd,OAAOA,KAAK,GAAG,CAAC;IAClB,KAAK,MAAM;MACT,OAAO,CAAC;IACV;MAAS;MACPG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;MAClB,OAAOA,KAAK;EAAA;AAElB,CAAC;AAEH,MAAMK,KAAK,GAAGP,WAAW,CAACC,cAAc,CAAC;AACzCI,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,QAAQ,EAAE,CAAC;AAC7BD,KAAK,CAACE,QAAQ,CAAC;EAAEL,IAAI,EAAE;AAAY,CAAC,CAAC;AACrCG,KAAK,CAACE,QAAQ,CAAC;EAAEL,IAAI,EAAE;AAAY,CAAC,CAAC;AACrCG,KAAK,CAACE,QAAQ,CAAC;EAAEL,IAAI,EAAE;AAAY,CAAC,CAAC;AACrCC,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,QAAQ,EAAE,CAAC;AAC7BD,KAAK,CAACE,QAAQ,CAAC;EAAEL,IAAI,EAAE;AAAO,CAAC,CAAC;AAChCG,KAAK,CAACE,QAAQ,CAAC;EAAEL,IAAI,EAAE;AAAY,CAAC,CAAC;AACrCC,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,QAAQ,EAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}