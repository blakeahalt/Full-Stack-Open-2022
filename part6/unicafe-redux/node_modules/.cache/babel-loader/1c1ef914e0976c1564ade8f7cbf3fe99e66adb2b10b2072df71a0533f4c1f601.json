{"ast":null,"code":"var _jsxFileName = \"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/part6/src/App.js\";\n// import { createNote, toggleImportanceOf } from './reducers/noteReducer'\n// import { useSelector, useDispatch } from 'react-redux'\n\n// const App = () => {\n//   const dispatch = useDispatch()\n//   const notes = useSelector(state => state)\n\n//   const addNote = (event) => {\n//     event.preventDefault()\n//     const content = event.target.note.value\n//     event.target.note.value = ''\n//     dispatch(createNote(content))\n//   }\n\n//   const toggleImportance = (id) => {\n//     dispatch(toggleImportanceOf(id))\n//   }\n\n//   return(\n//     <div>\n//       <form onSubmit={addNote}>\n//         <input name=\"note\" /> \n//         <button type=\"submit\">add</button>\n//       </form>\n//       <ul>\n//         {notes.map(note=>\n//           <li key={note.id} onClick={() => toggleImportance(note.id)}>\n//             {note.content} <strong>{note.important ? 'important' : ''}</strong>\n//           </li>\n//         )}\n//         </ul>\n//     </div>\n//   )\n// }\n\n// export default App\nimport { useSelector, useDispatch } from 'react-redux';\nimport Notes from \"./components/Notes\";\nimport NewNote from \"./components/NewNote\";\nimport NoteReducer from \"./reducers/noteReducer\";\n// import counterReducer from \"./counterReducer\"\n\nimport { createStore } from 'redux';\n\n// const counterReducer = (state = 0, action) => {\n//     switch (action.type) {\n//       case 'INCREMENT':\n//         return state + 1\n//       case 'DECREMENT':\n//         return state - 1\n//       case 'ZERO':\n//         return 0\n//       default: // if none of the above matches, code comes here\n//       // console.log('state:', state)\n//         return state\n//     }\n//   }\n\n// const dispatch = useDispatch();\n//   const goodCount = useSelector(state => state.good);\n//   const okCount = useSelector(state => state.ok);\n//   const badCount = useSelector(state => state.bad);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const initialState = {\n    good: 0,\n    ok: 0,\n    bad: 0\n  };\n  const handleGoodClick = () => {\n    dispatch({\n      type: 'GOOD'\n    });\n  };\n  const store = createStore(counterReducer);\n  store.subscribe(() => {\n    const storeNow = store.getState();\n    console.log('storeNow:', storeNow);\n  });\n  const counterReducer = function () {\n    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    let action = arguments.length > 1 ? arguments[1] : undefined;\n    switch (action.type) {\n      case 'GOOD':\n        return {\n          ...state,\n          good: state.good + 1\n        };\n      case 'OK':\n        return {\n          ...state,\n          ok: state.ok + 1\n        };\n      case 'BAD':\n        return {\n          ...state,\n          bad: state.bad + 1\n        };\n      case 'ZERO':\n        return initialState;\n      default:\n        return state;\n    }\n  };\n\n  // console.log('store.getState():', store.getState())\n  // store.dispatch({ type: 'INCREMENT' })\n  // store.dispatch({ type: 'INCREMENT' })\n  // store.dispatch({ type: 'INCREMENT' })\n  // console.log(store.getState())\n  // store.dispatch({ type: 'ZERO' })\n  // store.dispatch({ type: 'DECREMENT' })\n  // console.log(store.getState())\n\n  // const App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => store.dispatch({\n        type: 'GOOD'\n      }),\n      children: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"ok\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"reset stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"good \", store.getState().good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"ok\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","useDispatch","Notes","NewNote","NoteReducer","createStore","jsxDEV","_jsxDEV","App","initialState","good","ok","bad","handleGoodClick","dispatch","type","store","counterReducer","subscribe","storeNow","getState","console","log","state","arguments","length","undefined","action","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/part6/src/App.js"],"sourcesContent":["// import { createNote, toggleImportanceOf } from './reducers/noteReducer'\n// import { useSelector, useDispatch } from 'react-redux'\n\n// const App = () => {\n//   const dispatch = useDispatch()\n//   const notes = useSelector(state => state)\n\n//   const addNote = (event) => {\n//     event.preventDefault()\n//     const content = event.target.note.value\n//     event.target.note.value = ''\n//     dispatch(createNote(content))\n//   }\n\n//   const toggleImportance = (id) => {\n//     dispatch(toggleImportanceOf(id))\n//   }\n\n//   return(\n//     <div>\n//       <form onSubmit={addNote}>\n//         <input name=\"note\" /> \n//         <button type=\"submit\">add</button>\n//       </form>\n//       <ul>\n//         {notes.map(note=>\n//           <li key={note.id} onClick={() => toggleImportance(note.id)}>\n//             {note.content} <strong>{note.important ? 'important' : ''}</strong>\n//           </li>\n//         )}\n//         </ul>\n//     </div>\n//   )\n// }\n\n// export default App\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nimport Notes from \"./components/Notes\"\nimport NewNote from \"./components/NewNote\"\nimport NoteReducer from \"./reducers/noteReducer\"\n// import counterReducer from \"./counterReducer\"\n\n\nimport { createStore } from 'redux'\n\n// const counterReducer = (state = 0, action) => {\n//     switch (action.type) {\n//       case 'INCREMENT':\n//         return state + 1\n//       case 'DECREMENT':\n//         return state - 1\n//       case 'ZERO':\n//         return 0\n//       default: // if none of the above matches, code comes here\n//       // console.log('state:', state)\n//         return state\n//     }\n//   }\n\n// const dispatch = useDispatch();\n//   const goodCount = useSelector(state => state.good);\n//   const okCount = useSelector(state => state.ok);\n//   const badCount = useSelector(state => state.bad);\nconst App = () => {\n  \nconst initialState = {\n  good: 0,\n  ok: 0,\n  bad: 0\n}\n\nconst handleGoodClick = () => {\n  dispatch({ type: 'GOOD' });\n};\n\nconst store = createStore(counterReducer)\n  store.subscribe(() => {\n    const storeNow = store.getState()\n    console.log('storeNow:', storeNow)\n  })\n\n  const counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GOOD':\n      return { ...state, good: state.good + 1 }\n    case 'OK':\n      return { ...state, ok: state.ok + 1 }\n    case 'BAD':\n      return { ...state, bad: state.bad + 1 }\n    case 'ZERO':\n      return initialState\n    default:\n      return state\n  }\n}\n  \n  \n\n  // console.log('store.getState():', store.getState())\n  // store.dispatch({ type: 'INCREMENT' })\n  // store.dispatch({ type: 'INCREMENT' })\n  // store.dispatch({ type: 'INCREMENT' })\n  // console.log(store.getState())\n  // store.dispatch({ type: 'ZERO' })\n  // store.dispatch({ type: 'DECREMENT' })\n  // console.log(store.getState())\n\n\n\n\n\n// const App = () => {\n  return(\n    <div>\n      <button onClick={() => store.dispatch({ type: 'GOOD' })}>Good</button>\n\n        <button>ok</button> \n        <button>bad</button>\n        <button>reset stats</button>\n        <div>good {store.getState().good}</div>\n        <div>ok</div>\n        <div>bad</div>\n      </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}