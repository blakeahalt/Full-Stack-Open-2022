{"ast":null,"code":"var _jsxFileName = \"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/part6/src/index.js\";\n// // import React from 'react'\n// // import ReactDOM from 'react-dom/client'\n\n// // import { createStore } from 'redux'\n// // import { Provider } from 'react-redux'\n\n// // import App from './App'\n// // import noteReducer from './reducers/NoteReducer'\n\n// // const store = createStore(noteReducer)\n\n// // ReactDOM.createRoot(document.getElementById('root')).render(\n// //   <Provider store={store}>\n// //     <App />\n// //   </Provider>\n// // )\n\n// import React from 'react'\n// import ReactDOM from 'react-dom/client'\n\n// import { createStore } from 'redux'\n// import { configureStore } from '@reduxjs/toolkit';\n\n// const counterReducer = (state = 0, action) => {\n//   switch (action.type) {\n//     case 'INCREMENT':\n//       return state + 1\n//     case 'DECREMENT':\n//       return state - 1\n//     case 'ZERO':\n//       return 0\n//     default:\n//       return state\n//   }\n// }\n\n// const noteReducer = (state = [], action) => {\n//   if (action.type === 'NEW_NOTE') {\n//     return state.concat(action.payload)\n//   }\n\n//   return state\n// }\n\n// const store = createStore(noteReducer)  \n\n// store.dispatch({\n//   type: 'NEW_NOTE',\n//   payload: {\n//     content: 'the app state is in redux store',\n//     important: true,\n//     id: 1\n//   }\n// })\n\n// store.dispatch({\n//   type: 'NEW_NOTE',\n//   payload: {\n//     content: 'state changes are made with actions',\n//     important: false,\n//     id: 2\n//   }\n// })\n\n// const storeNow = store.getState()\n// console.log('storeNow:', storeNow)\n\n// const App = () => {\n//   return(\n//     <div>\n//       <ul>\n//         {store.getState().map(note=>\n//           <li key={note.id}>\n//             {note.content} <strong>{note.important ? 'important' : ''}</strong>\n//           </li>\n//         )}\n//         </ul>\n//     </div>\n//   )\n// }\n\n// // const store = createStore(counterReducer)\n\n// // const App = () => {\n// //   return (\n// //     <div>\n// //       <div>\n// //         {store.getState()}\n// //       </div>\n// //       <button \n// //         onClick={e => store.dispatch({ type: 'INCREMENT' })}\n// //       >\n// //         plus\n// //       </button>\n// //       <button\n// //         onClick={e => store.dispatch({ type: 'DECREMENT' })}\n// //       >\n// //         minus\n// //       </button>\n// //       <button \n// //         onClick={e => store.dispatch({ type: 'ZERO' })}\n// //       >\n// //         zero\n// //       </button>\n// //     </div>\n// //   )\n// // }\n\n// const root = ReactDOM.createRoot(document.getElementById('root'))\n\n// const renderApp = () => {\n//   root.render(<App />)\n// }\n\n// renderApp()\n// store.subscribe(renderApp)\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reducer from './reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(reducer);\nReactDOM.createRoot(document.getElementById('root')).render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 134,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","createStore","Provider","App","reducer","jsxDEV","_jsxDEV","store","createRoot","document","getElementById","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/part6/src/index.js"],"sourcesContent":["// // import React from 'react'\n// // import ReactDOM from 'react-dom/client'\n\n// // import { createStore } from 'redux'\n// // import { Provider } from 'react-redux'\n\n// // import App from './App'\n// // import noteReducer from './reducers/NoteReducer'\n\n// // const store = createStore(noteReducer)\n\n// // ReactDOM.createRoot(document.getElementById('root')).render(\n// //   <Provider store={store}>\n// //     <App />\n// //   </Provider>\n// // )\n\n// import React from 'react'\n// import ReactDOM from 'react-dom/client'\n\n// import { createStore } from 'redux'\n// import { configureStore } from '@reduxjs/toolkit';\n\n// const counterReducer = (state = 0, action) => {\n//   switch (action.type) {\n//     case 'INCREMENT':\n//       return state + 1\n//     case 'DECREMENT':\n//       return state - 1\n//     case 'ZERO':\n//       return 0\n//     default:\n//       return state\n//   }\n// }\n\n// const noteReducer = (state = [], action) => {\n//   if (action.type === 'NEW_NOTE') {\n//     return state.concat(action.payload)\n//   }\n\n//   return state\n// }\n\n\n\n// const store = createStore(noteReducer)  \n\n// store.dispatch({\n//   type: 'NEW_NOTE',\n//   payload: {\n//     content: 'the app state is in redux store',\n//     important: true,\n//     id: 1\n//   }\n// })\n\n// store.dispatch({\n//   type: 'NEW_NOTE',\n//   payload: {\n//     content: 'state changes are made with actions',\n//     important: false,\n//     id: 2\n//   }\n// })\n\n\n// const storeNow = store.getState()\n// console.log('storeNow:', storeNow)\n\n\n// const App = () => {\n//   return(\n//     <div>\n//       <ul>\n//         {store.getState().map(note=>\n//           <li key={note.id}>\n//             {note.content} <strong>{note.important ? 'important' : ''}</strong>\n//           </li>\n//         )}\n//         </ul>\n//     </div>\n//   )\n// }\n\n// // const store = createStore(counterReducer)\n\n// // const App = () => {\n// //   return (\n// //     <div>\n// //       <div>\n// //         {store.getState()}\n// //       </div>\n// //       <button \n// //         onClick={e => store.dispatch({ type: 'INCREMENT' })}\n// //       >\n// //         plus\n// //       </button>\n// //       <button\n// //         onClick={e => store.dispatch({ type: 'DECREMENT' })}\n// //       >\n// //         minus\n// //       </button>\n// //       <button \n// //         onClick={e => store.dispatch({ type: 'ZERO' })}\n// //       >\n// //         zero\n// //       </button>\n// //     </div>\n// //   )\n// // }\n\n// const root = ReactDOM.createRoot(document.getElementById('root'))\n\n// const renderApp = () => {\n//   root.render(<App />)\n// }\n\n// renderApp()\n// store.subscribe(renderApp)\n\nimport React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nimport App from './App'\nimport reducer from './reducer'\n\nconst store = createStore(reducer)\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n)"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AAEvC,SAASC,WAAW,QAAQ,OAAO;AACnC,SAASC,QAAQ,QAAQ,aAAa;AAEtC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,OAAO,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,KAAK,GAAGN,WAAW,CAACG,OAAO,CAAC;AAElCJ,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAACC,MAAM,eACzDL,OAAA,CAACJ,QAAQ;EAACK,KAAK,EAAEA,KAAM;EAAAK,QAAA,eACrBN,OAAA,CAACH,GAAG;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAG;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QACE,CACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}