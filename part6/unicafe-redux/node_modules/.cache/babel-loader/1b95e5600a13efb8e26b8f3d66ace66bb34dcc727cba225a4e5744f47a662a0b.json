{"ast":null,"code":"var _jsxFileName = \"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/part6/src/index.js\";\n// import React from 'react'\n// import ReactDOM from 'react-dom/client'\n\n// import { createStore } from 'redux'\n// import { Provider } from 'react-redux'\n\n// import App from './App'\n// import noteReducer from './reducers/NoteReducer'\n\n// const store = createStore(noteReducer)\n\n// ReactDOM.createRoot(document.getElementById('root')).render(\n//   <Provider store={store}>\n//     <App />\n//   </Provider>\n// )\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\n\n// const counterReducer = (state = 0, action) => {\n//   switch (action.type) {\n//     case 'INCREMENT':\n//       return state + 1\n//     case 'DECREMENT':\n//       return state - 1\n//     case 'ZERO':\n//       return 0\n//     default:\n//       return state\n//   }\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst noteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === 'NEW_NOTE') {\n    return state.concat(action.payload);\n  }\n  return state;\n};\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'GOOD':\n      return state + 1;\n    case 'OK':\n      return state + 1;\n    case 'BAD':\n      return state + 1;\n    case 'ZERO':\n      return 0;\n    default:\n      return state;\n  }\n};\nconst store = createStore(noteReducer);\nstore.dispatch({\n  type: 'NEW_NOTE',\n  payload: {\n    content: 'the app state is in redux store',\n    important: true,\n    id: 1\n  }\n});\nstore.dispatch({\n  type: 'NEW_NOTE',\n  payload: {\n    content: 'state changes are made with actions',\n    important: false,\n    id: 2\n  }\n});\nconst storeNow = store.getState();\nconsole.log('storeNow:', storeNow);\nconst initialState = {\n  good: 0,\n  ok: 0,\n  bad: 0\n};\nconst App = () => {\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <ul>\n    //     {store.getState().map(note=>\n    //       <li key={note.id}>\n    //         {note.content} <strong>{note.important ? 'important' : ''}</strong>\n    //       </li>\n    //     )}\n    //     </ul>\n    // </div>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: good,\n        children: \"good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"reset stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"good \", store.getState().good]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n// const store = createStore(counterReducer)\n\n// const App = () => {\n//   return (\n//     <div>\n//       <div>\n//         {store.getState()}\n//       </div>\n//       <button \n//         onClick={e => store.dispatch({ type: 'INCREMENT' })}\n//       >\n//         plus\n//       </button>\n//       <button\n//         onClick={e => store.dispatch({ type: 'DECREMENT' })}\n//       >\n//         minus\n//       </button>\n//       <button \n//         onClick={e => store.dispatch({ type: 'ZERO' })}\n//       >\n//         zero\n//       </button>\n//     </div>\n//   )\n// }\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst renderApp = () => {\n  root.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 15\n  }, this));\n};\nrenderApp();\nstore.subscribe(renderApp);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","createStore","configureStore","jsxDEV","_jsxDEV","noteReducer","state","arguments","length","undefined","action","type","concat","payload","counterReducer","initialState","store","dispatch","content","important","id","storeNow","getState","console","log","good","ok","bad","App","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","createRoot","document","getElementById","renderApp","render","subscribe","$RefreshReg$"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/part6/src/index.js"],"sourcesContent":["// import React from 'react'\n// import ReactDOM from 'react-dom/client'\n\n// import { createStore } from 'redux'\n// import { Provider } from 'react-redux'\n\n// import App from './App'\n// import noteReducer from './reducers/NoteReducer'\n\n// const store = createStore(noteReducer)\n\n// ReactDOM.createRoot(document.getElementById('root')).render(\n//   <Provider store={store}>\n//     <App />\n//   </Provider>\n// )\n\nimport React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nimport { createStore } from 'redux'\nimport { configureStore } from '@reduxjs/toolkit';\n\n// const counterReducer = (state = 0, action) => {\n//   switch (action.type) {\n//     case 'INCREMENT':\n//       return state + 1\n//     case 'DECREMENT':\n//       return state - 1\n//     case 'ZERO':\n//       return 0\n//     default:\n//       return state\n//   }\n// }\n\nconst noteReducer = (state = [], action) => {\n  if (action.type === 'NEW_NOTE') {\n    return state.concat(action.payload)\n  }\n\n  return state\n}\n\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GOOD':\n      return state + 1\n    case 'OK':\n      return state + 1\n    case 'BAD':\n      return state + 1\n    case 'ZERO':\n      return 0\n    default: return state\n  }\n}\n\n\nconst store = createStore(noteReducer)  \n\nstore.dispatch({\n  type: 'NEW_NOTE',\n  payload: {\n    content: 'the app state is in redux store',\n    important: true,\n    id: 1\n  }\n})\n\nstore.dispatch({\n  type: 'NEW_NOTE',\n  payload: {\n    content: 'state changes are made with actions',\n    important: false,\n    id: 2\n  }\n})\n\n\nconst storeNow = store.getState()\nconsole.log('storeNow:', storeNow)\n\nconst initialState = {\n  good: 0,\n  ok: 0,\n  bad: 0\n}\n\nconst App = () => {\n  return(\n    // <div>\n    //   <ul>\n    //     {store.getState().map(note=>\n    //       <li key={note.id}>\n    //         {note.content} <strong>{note.important ? 'important' : ''}</strong>\n    //       </li>\n    //     )}\n    //     </ul>\n    // </div>\n    <div>\n      <button onClick={good}>good</button> \n      <button>ok</button> \n      <button>bad</button>\n      <button>reset stats</button>\n      <div>good {store.getState().good}</div>\n      <div>ok</div>\n      <div>bad</div>\n    </div>\n  )\n}\n\n// const store = createStore(counterReducer)\n\n// const App = () => {\n//   return (\n//     <div>\n//       <div>\n//         {store.getState()}\n//       </div>\n//       <button \n//         onClick={e => store.dispatch({ type: 'INCREMENT' })}\n//       >\n//         plus\n//       </button>\n//       <button\n//         onClick={e => store.dispatch({ type: 'DECREMENT' })}\n//       >\n//         minus\n//       </button>\n//       <button \n//         onClick={e => store.dispatch({ type: 'ZERO' })}\n//       >\n//         zero\n//       </button>\n//     </div>\n//   )\n// }\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\n\nconst renderApp = () => {\n  root.render(<App />)\n}\n\nrenderApp()\nstore.subscribe(renderApp)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}