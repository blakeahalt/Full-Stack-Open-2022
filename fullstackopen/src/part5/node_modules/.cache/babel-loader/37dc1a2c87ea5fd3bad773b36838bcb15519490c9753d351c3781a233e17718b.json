{"ast":null,"code":"import axios from 'axios';\n// const jwt = require('jsonwebtoken')\nconst baseUrl = 'http://localhost:3001/api/notes';\n// const User = require('../models/user')\n// const Note = require('../models/note')\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\n// const getTokenFrom = request => {\n//   const authorization = request.get('authorization')\n//   if (authorization && authorization.toLowerCase().startsWith('bearer ')) {\n//     return authorization.substring(7)\n//   }\n//   return null\n// }\n\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\n//   const request = axios.post(baseUrl, newObject)\n//   return request.then(response => response.data)\n\n//   const body = request.body\n//   const token = getTokenFrom(request)\n//   const decodedToken = jwt.verify(token, process.env.SECRET)\n//   if (!decodedToken.id) {\n//       return response.status(401).json({ error: 'token missing or invalid' })\n//     }\n//     const user = await User.findById(decodedToken.id)\n\n//     const note = new Note({\n//         content: body.content,\n//         important: body.important === undefined ? false : body.important,\n//         date: new Date(),\n//         user: user._id\n//     })\n\n//     const savedNote = await note.save()\n//     await user.save()\n//     response.status(201).json(savedNote)\n// }\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\nconst noteService = {\n  getAll,\n  create,\n  update\n};\nexport default noteService;","map":{"version":3,"names":["axios","baseUrl","getAll","request","get","then","response","data","create","newObject","config","headers","Authorization","token","post","update","id","put","noteService"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/src/services/notes.js"],"sourcesContent":["import axios from 'axios'\n// const jwt = require('jsonwebtoken')\nconst baseUrl = 'http://localhost:3001/api/notes'\n// const User = require('../models/user')\n// const Note = require('../models/note')\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n\n  return request.then(response => response.data)\n}\n\n\n// const getTokenFrom = request => {\n//   const authorization = request.get('authorization')\n//   if (authorization && authorization.toLowerCase().startsWith('bearer ')) {\n//     return authorization.substring(7)\n//   }\n//   return null\n// }\n\nconst create = async (newObject) => {\n    const config = {\n        headers: { Authorization: token },\n      }\n    \n      const response = await axios.post(baseUrl, newObject, config)\n      return response.data\n    }\n\n    //   const request = axios.post(baseUrl, newObject)\n//   return request.then(response => response.data)\n\n\n//   const body = request.body\n//   const token = getTokenFrom(request)\n//   const decodedToken = jwt.verify(token, process.env.SECRET)\n//   if (!decodedToken.id) {\n//       return response.status(401).json({ error: 'token missing or invalid' })\n//     }\n//     const user = await User.findById(decodedToken.id)\n    \n//     const note = new Note({\n//         content: body.content,\n//         important: body.important === undefined ? false : body.important,\n//         date: new Date(),\n//         user: user._id\n//     })\n    \n//     const savedNote = await note.save()\n//     await user.save()\n//     response.status(201).json(savedNote)\n// }\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst noteService = {\n    getAll,\n    create,\n    update,\n  }\n\nexport default noteService\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,OAAO,GAAG,iCAAiC;AACjD;AACA;;AAEA,MAAMC,MAAM,GAAG,MAAM;EACnB,MAAMC,OAAO,GAAGH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;EAElC,OAAOE,OAAO,CAACE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;AAChD,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG,MAAOC,SAAS,IAAK;EAChC,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MAAEC,aAAa,EAAEC;IAAM;EAClC,CAAC;EAED,MAAMP,QAAQ,GAAG,MAAMN,KAAK,CAACc,IAAI,CAACb,OAAO,EAAEQ,SAAS,EAAEC,MAAM,CAAC;EAC7D,OAAOJ,QAAQ,CAACC,IAAI;AACtB,CAAC;;AAED;AACJ;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAMQ,MAAM,GAAG,CAACC,EAAE,EAAEP,SAAS,KAAK;EAChC,MAAMN,OAAO,GAAGH,KAAK,CAACiB,GAAG,CAAE,GAAEhB,OAAQ,IAAGe,EAAG,EAAC,EAAEP,SAAS,CAAC;EACxD,OAAON,OAAO,CAACE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;AAChD,CAAC;AAED,MAAMW,WAAW,GAAG;EAChBhB,MAAM;EACNM,MAAM;EACNO;AACF,CAAC;AAEH,eAAeG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}