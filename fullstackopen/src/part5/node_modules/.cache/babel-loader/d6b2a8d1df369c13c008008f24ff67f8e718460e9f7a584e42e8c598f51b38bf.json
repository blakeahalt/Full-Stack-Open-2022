{"ast":null,"code":"import _regeneratorRuntime from\"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from'axios';var jwt=require('jsonwebtoken');var baseUrl='http://localhost:3001/api/notes';var User=require('../models/user');var Note=require('../models/note');var getAll=function getAll(){var request=axios.get(baseUrl);return request.then(function(response){return response.data;});};var getTokenFrom=function getTokenFrom(request){var authorization=request.get('authorization');if(authorization&&authorization.toLowerCase().startsWith('bearer ')){return authorization.substring(7);}return null;};var create=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(newObject,response){var request,body,token,decodedToken,user,note,savedNote;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:request=axios.post(baseUrl,newObject);//   return request.then(response => response.data)\nbody=request.body;token=getTokenFrom(request);decodedToken=jwt.verify(token,process.env.SECRET);if(decodedToken.id){_context.next=6;break;}return _context.abrupt(\"return\",response.status(401).json({error:'token missing or invalid'}));case 6:_context.next=8;return User.findById(decodedToken.id);case 8:user=_context.sent;note=new Note({content:body.content,important:body.important===undefined?false:body.important,date:new Date(),user:user._id});_context.next=12;return note.save();case 12:savedNote=_context.sent;_context.next=15;return user.save();case 15:response.status(201).json(savedNote);case 16:case\"end\":return _context.stop();}},_callee);}));return function create(_x,_x2){return _ref.apply(this,arguments);};}();var update=function update(id,newObject){var request=axios.put(\"\".concat(baseUrl,\"/\").concat(id),newObject);return request.then(function(response){return response.data;});};var noteService={getAll:getAll,create:create,update:update};export default noteService;","map":{"version":3,"names":["axios","jwt","require","baseUrl","User","Note","getAll","request","get","then","response","data","getTokenFrom","authorization","toLowerCase","startsWith","substring","create","newObject","post","body","token","decodedToken","verify","process","env","SECRET","id","status","json","error","findById","user","note","content","important","undefined","date","Date","_id","save","savedNote","update","put","noteService"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/src/services/notes.js"],"sourcesContent":["import axios from 'axios'\nconst jwt = require('jsonwebtoken')\nconst baseUrl = 'http://localhost:3001/api/notes'\nconst User = require('../models/user')\nconst Note = require('../models/note')\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n\n  return request.then(response => response.data)\n}\n\nconst getTokenFrom = request => {\n  const authorization = request.get('authorization')\n  if (authorization && authorization.toLowerCase().startsWith('bearer ')) {\n    return authorization.substring(7)\n  }\n  return null\n}\n\nconst create = async (newObject, response) => {\n  const request = axios.post(baseUrl, newObject)\n//   return request.then(response => response.data)\n  const body = request.body\n  const token = getTokenFrom(request)\n  const decodedToken = jwt.verify(token, process.env.SECRET)\n  if (!decodedToken.id) {\n      return response.status(401).json({ error: 'token missing or invalid' })\n    }\n    const user = await User.findById(decodedToken.id)\n    \n    const note = new Note({\n        content: body.content,\n        important: body.important === undefined ? false : body.important,\n        date: new Date(),\n        user: user._id\n    })\n    \n    const savedNote = await note.save()\n    await user.save()\n    response.status(201).json(savedNote)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst noteService = {\n    getAll,\n    create,\n    update,\n  }\n  \nexport default noteService\n"],"mappings":"0VAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,GAAMC,IAAG,CAAGC,OAAO,CAAC,cAAc,CAAC,CACnC,GAAMC,QAAO,CAAG,iCAAiC,CACjD,GAAMC,KAAI,CAAGF,OAAO,CAAC,gBAAgB,CAAC,CACtC,GAAMG,KAAI,CAAGH,OAAO,CAAC,gBAAgB,CAAC,CAEtC,GAAMI,OAAM,CAAG,QAATA,OAAM,EAAS,CACnB,GAAMC,QAAO,CAAGP,KAAK,CAACQ,GAAG,CAACL,OAAO,CAAC,CAElC,MAAOI,QAAO,CAACE,IAAI,CAAC,SAAAC,QAAQ,QAAIA,SAAQ,CAACC,IAAI,GAAC,CAChD,CAAC,CAED,GAAMC,aAAY,CAAG,QAAfA,aAAY,CAAGL,OAAO,CAAI,CAC9B,GAAMM,cAAa,CAAGN,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAClD,GAAIK,aAAa,EAAIA,aAAa,CAACC,WAAW,EAAE,CAACC,UAAU,CAAC,SAAS,CAAC,CAAE,CACtE,MAAOF,cAAa,CAACG,SAAS,CAAC,CAAC,CAAC,CACnC,CACA,MAAO,KAAI,CACb,CAAC,CAED,GAAMC,OAAM,4FAAG,iBAAOC,SAAS,CAAER,QAAQ,2KACjCH,OAAO,CAAGP,KAAK,CAACmB,IAAI,CAAChB,OAAO,CAAEe,SAAS,CAAC,CAChD;AACQE,IAAI,CAAGb,OAAO,CAACa,IAAI,CACnBC,KAAK,CAAGT,YAAY,CAACL,OAAO,CAAC,CAC7Be,YAAY,CAAGrB,GAAG,CAACsB,MAAM,CAACF,KAAK,CAAEG,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC,IACrDJ,YAAY,CAACK,EAAE,yDACTjB,QAAQ,CAACkB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,CAAEC,KAAK,CAAE,0BAA2B,CAAC,CAAC,+BAEtD1B,KAAI,CAAC2B,QAAQ,CAACT,YAAY,CAACK,EAAE,CAAC,QAA3CK,IAAI,eAEJC,IAAI,CAAG,GAAI5B,KAAI,CAAC,CAClB6B,OAAO,CAAEd,IAAI,CAACc,OAAO,CACrBC,SAAS,CAAEf,IAAI,CAACe,SAAS,GAAKC,SAAS,CAAG,KAAK,CAAGhB,IAAI,CAACe,SAAS,CAChEE,IAAI,CAAE,GAAIC,KAAI,EAAE,CAChBN,IAAI,CAAEA,IAAI,CAACO,GACf,CAAC,CAAC,wBAEsBN,KAAI,CAACO,IAAI,EAAE,SAA7BC,SAAS,sCACTT,KAAI,CAACQ,IAAI,EAAE,SACjB9B,QAAQ,CAACkB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACY,SAAS,CAAC,uDACvC,kBArBKxB,OAAM,gDAqBX,CAED,GAAMyB,OAAM,CAAG,QAATA,OAAM,CAAIf,EAAE,CAAET,SAAS,CAAK,CAChC,GAAMX,QAAO,CAAGP,KAAK,CAAC2C,GAAG,WAAIxC,OAAO,aAAIwB,EAAE,EAAIT,SAAS,CAAC,CACxD,MAAOX,QAAO,CAACE,IAAI,CAAC,SAAAC,QAAQ,QAAIA,SAAQ,CAACC,IAAI,GAAC,CAChD,CAAC,CAED,GAAMiC,YAAW,CAAG,CAChBtC,MAAM,CAANA,MAAM,CACNW,MAAM,CAANA,MAAM,CACNyB,MAAM,CAANA,MACF,CAAC,CAEH,cAAeE,YAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}