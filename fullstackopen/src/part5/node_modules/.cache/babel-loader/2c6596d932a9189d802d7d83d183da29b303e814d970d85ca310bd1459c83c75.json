{"ast":null,"code":"const mongoose = require('mongoose');\nconst uniqueValidator = require('mongoose-unique-validator');\nconst userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    unique: true\n  },\n  name: String,\n  passwordHash: String,\n  blogs: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Blog'\n  }]\n});\nuserSchema.plugin(uniqueValidator);\nuserSchema.set('toJSON', {\n  transform: (document, returnedObject) => {\n    returnedObject.id = returnedObject._id.toString();\n    delete returnedObject._id;\n    delete returnedObject.__v;\n    // the passwordHash should not be revealed\n    delete returnedObject.passwordHash;\n  }\n});\nconst User = mongoose.model('User', userSchema);\nmodule.exports = User;\n\n// const userSchema = new mongoose.Schema({\n//   username: String,\n//   name: String,\n//   passwordHash: String,\n//   notes: [\n//     {\n//       type: mongoose.Schema.Types.ObjectId,\n//       ref: 'Note'\n//     }\n//   ],\n// })","map":{"version":3,"names":["mongoose","require","uniqueValidator","userSchema","Schema","username","type","String","unique","name","passwordHash","blogs","Types","ObjectId","ref","plugin","set","transform","document","returnedObject","id","_id","toString","__v","User","model","module","exports"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/src/models/user.js"],"sourcesContent":["const mongoose = require('mongoose')\nconst uniqueValidator = require('mongoose-unique-validator')\n\nconst userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    unique: true,\n  },\n  name: String,\n  passwordHash: String,\n  blogs: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Blog'\n    }\n  ],\n})\n\nuserSchema.plugin(uniqueValidator)\n\nuserSchema.set('toJSON', {\n  transform: (document, returnedObject) => {\n    returnedObject.id = returnedObject._id.toString()\n    delete returnedObject._id\n    delete returnedObject.__v\n    // the passwordHash should not be revealed\n    delete returnedObject.passwordHash\n  }\n})\n\nconst User = mongoose.model('User', userSchema)\nmodule.exports = User\n\n\n\n\n\n\n// const userSchema = new mongoose.Schema({\n//   username: String,\n//   name: String,\n//   passwordHash: String,\n//   notes: [\n//     {\n//       type: mongoose.Schema.Types.ObjectId,\n//       ref: 'Note'\n//     }\n//   ],\n// })"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMC,eAAe,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AAE5D,MAAME,UAAU,GAAG,IAAIH,QAAQ,CAACI,MAAM,CAAC;EACrCC,QAAQ,EAAE;IACRC,IAAI,EAAEC,MAAM;IACZC,MAAM,EAAE;EACV,CAAC;EACDC,IAAI,EAAEF,MAAM;EACZG,YAAY,EAAEH,MAAM;EACpBI,KAAK,EAAE,CACL;IACEL,IAAI,EAAEN,QAAQ,CAACI,MAAM,CAACQ,KAAK,CAACC,QAAQ;IACpCC,GAAG,EAAE;EACP,CAAC;AAEL,CAAC,CAAC;AAEFX,UAAU,CAACY,MAAM,CAACb,eAAe,CAAC;AAElCC,UAAU,CAACa,GAAG,CAAC,QAAQ,EAAE;EACvBC,SAAS,EAAE,CAACC,QAAQ,EAAEC,cAAc,KAAK;IACvCA,cAAc,CAACC,EAAE,GAAGD,cAAc,CAACE,GAAG,CAACC,QAAQ,EAAE;IACjD,OAAOH,cAAc,CAACE,GAAG;IACzB,OAAOF,cAAc,CAACI,GAAG;IACzB;IACA,OAAOJ,cAAc,CAACT,YAAY;EACpC;AACF,CAAC,CAAC;AAEF,MAAMc,IAAI,GAAGxB,QAAQ,CAACyB,KAAK,CAAC,MAAM,EAAEtB,UAAU,CAAC;AAC/CuB,MAAM,CAACC,OAAO,GAAGH,IAAI;;AAOrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}