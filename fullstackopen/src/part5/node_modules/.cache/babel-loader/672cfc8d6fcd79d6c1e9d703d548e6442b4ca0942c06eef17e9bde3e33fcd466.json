{"ast":null,"code":"var mongoose=require('mongoose');var uniqueValidator=require('mongoose-unique-validator');var userSchema=new mongoose.Schema({username:{type:String,unique:true},name:String,passwordHash:String,blogs:[{type:mongoose.Schema.Types.ObjectId,ref:'Blog'}]});userSchema.plugin(uniqueValidator);userSchema.set('toJSON',{transform:function transform(document,returnedObject){returnedObject.id=returnedObject._id.toString();delete returnedObject._id;delete returnedObject.__v;// the passwordHash should not be revealed\ndelete returnedObject.passwordHash;}});var User=mongoose.model('User',userSchema);module.exports=User;// const userSchema = new mongoose.Schema({\n//   username: String,\n//   name: String,\n//   passwordHash: String,\n//   notes: [\n//     {\n//       type: mongoose.Schema.Types.ObjectId,\n//       ref: 'Note'\n//     }\n//   ],\n// })","map":{"version":3,"names":["mongoose","require","uniqueValidator","userSchema","Schema","username","type","String","unique","name","passwordHash","blogs","Types","ObjectId","ref","plugin","set","transform","document","returnedObject","id","_id","toString","__v","User","model","module","exports"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/src/models/user.js"],"sourcesContent":["const mongoose = require('mongoose')\nconst uniqueValidator = require('mongoose-unique-validator')\n\nconst userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    unique: true,\n  },\n  name: String,\n  passwordHash: String,\n  blogs: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Blog'\n    }\n  ],\n})\n\nuserSchema.plugin(uniqueValidator)\n\nuserSchema.set('toJSON', {\n  transform: (document, returnedObject) => {\n    returnedObject.id = returnedObject._id.toString()\n    delete returnedObject._id\n    delete returnedObject.__v\n    // the passwordHash should not be revealed\n    delete returnedObject.passwordHash\n  }\n})\n\nconst User = mongoose.model('User', userSchema)\nmodule.exports = User\n\n\n\n\n\n\n// const userSchema = new mongoose.Schema({\n//   username: String,\n//   name: String,\n//   passwordHash: String,\n//   notes: [\n//     {\n//       type: mongoose.Schema.Types.ObjectId,\n//       ref: 'Note'\n//     }\n//   ],\n// })"],"mappings":"AAAA,GAAMA,SAAQ,CAAGC,OAAO,CAAC,UAAU,CAAC,CACpC,GAAMC,gBAAe,CAAGD,OAAO,CAAC,2BAA2B,CAAC,CAE5D,GAAME,WAAU,CAAG,GAAIH,SAAQ,CAACI,MAAM,CAAC,CACrCC,QAAQ,CAAE,CACRC,IAAI,CAAEC,MAAM,CACZC,MAAM,CAAE,IACV,CAAC,CACDC,IAAI,CAAEF,MAAM,CACZG,YAAY,CAAEH,MAAM,CACpBI,KAAK,CAAE,CACL,CACEL,IAAI,CAAEN,QAAQ,CAACI,MAAM,CAACQ,KAAK,CAACC,QAAQ,CACpCC,GAAG,CAAE,MACP,CAAC,CAEL,CAAC,CAAC,CAEFX,UAAU,CAACY,MAAM,CAACb,eAAe,CAAC,CAElCC,UAAU,CAACa,GAAG,CAAC,QAAQ,CAAE,CACvBC,SAAS,CAAE,mBAACC,QAAQ,CAAEC,cAAc,CAAK,CACvCA,cAAc,CAACC,EAAE,CAAGD,cAAc,CAACE,GAAG,CAACC,QAAQ,EAAE,CACjD,MAAOH,eAAc,CAACE,GAAG,CACzB,MAAOF,eAAc,CAACI,GAAG,CACzB;AACA,MAAOJ,eAAc,CAACT,YAAY,CACpC,CACF,CAAC,CAAC,CAEF,GAAMc,KAAI,CAAGxB,QAAQ,CAACyB,KAAK,CAAC,MAAM,CAAEtB,UAAU,CAAC,CAC/CuB,MAAM,CAACC,OAAO,CAAGH,IAAI,CAOrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}