{"ast":null,"code":"import axios from 'axios';\nconst jwt = require('jsonwebtoken');\nconst baseUrl = 'http://localhost:3001/api/notes';\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\nconst create = async newObject => {\n  //   const request = axios.post(baseUrl, newObject)\n  //   return request.then(response => response.data)\n  const body = request.body;\n  // const token = getTokenFrom(request)\n  const decodedToken = jwt.verify(request.token, process.env.SECRET);\n  if (!decodedToken.id) {\n    return response.status(401).json({\n      error: 'token missing or invalid'\n    });\n  }\n  const user = await User.findById(decodedToken.id);\n  const note = new Note({\n    content: body.content,\n    important: body.important === undefined ? false : body.important,\n    date: new Date(),\n    user: user._id\n  });\n  const savedNote = await note.save();\n  await user.save();\n  response.status(201).json(savedNote);\n};\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\nconst noteService = {\n  getAll,\n  create,\n  update\n};\nexport default noteService;","map":{"version":3,"names":["axios","jwt","require","baseUrl","getAll","request","get","then","response","data","create","newObject","body","decodedToken","verify","token","process","env","SECRET","id","status","json","error","user","User","findById","note","Note","content","important","undefined","date","Date","_id","savedNote","save","update","put","noteService"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/src/services/notes.js"],"sourcesContent":["import axios from 'axios'\nconst jwt = require('jsonwebtoken')\nconst baseUrl = 'http://localhost:3001/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n//   const request = axios.post(baseUrl, newObject)\n//   return request.then(response => response.data)\n  const body = request.body\n  // const token = getTokenFrom(request)\n  const decodedToken = jwt.verify(request.token, process.env.SECRET)\n  if (!decodedToken.id) {\n      return response.status(401).json({ error: 'token missing or invalid' })\n    }\n    const user = await User.findById(decodedToken.id)\n    \n    const note = new Note({\n        content: body.content,\n        important: body.important === undefined ? false : body.important,\n        date: new Date(),\n        user: user._id\n    })\n    \n    const savedNote = await note.save()\n    await user.save()\n    response.status(201).json(savedNote)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst noteService = {\n    getAll,\n    create,\n    update,\n  }\nexport default noteService\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,GAAG,GAAGC,OAAO,CAAC,cAAc,CAAC;AACnC,MAAMC,OAAO,GAAG,iCAAiC;AAEjD,MAAMC,MAAM,GAAG,MAAM;EACnB,MAAMC,OAAO,GAAGL,KAAK,CAACM,GAAG,CAACH,OAAO,CAAC;EAElC,OAAOE,OAAO,CAACE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;AAChD,CAAC;AAED,MAAMC,MAAM,GAAG,MAAMC,SAAS,IAAI;EAClC;EACA;EACE,MAAMC,IAAI,GAAGP,OAAO,CAACO,IAAI;EACzB;EACA,MAAMC,YAAY,GAAGZ,GAAG,CAACa,MAAM,CAACT,OAAO,CAACU,KAAK,EAAEC,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;EAClE,IAAI,CAACL,YAAY,CAACM,EAAE,EAAE;IAClB,OAAOX,QAAQ,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE;IAA2B,CAAC,CAAC;EACzE;EACA,MAAMC,IAAI,GAAG,MAAMC,IAAI,CAACC,QAAQ,CAACZ,YAAY,CAACM,EAAE,CAAC;EAEjD,MAAMO,IAAI,GAAG,IAAIC,IAAI,CAAC;IAClBC,OAAO,EAAEhB,IAAI,CAACgB,OAAO;IACrBC,SAAS,EAAEjB,IAAI,CAACiB,SAAS,KAAKC,SAAS,GAAG,KAAK,GAAGlB,IAAI,CAACiB,SAAS;IAChEE,IAAI,EAAE,IAAIC,IAAI,EAAE;IAChBT,IAAI,EAAEA,IAAI,CAACU;EACf,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAG,MAAMR,IAAI,CAACS,IAAI,EAAE;EACnC,MAAMZ,IAAI,CAACY,IAAI,EAAE;EACjB3B,QAAQ,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACa,SAAS,CAAC;AACxC,CAAC;AAED,MAAME,MAAM,GAAG,CAACjB,EAAE,EAAER,SAAS,KAAK;EAChC,MAAMN,OAAO,GAAGL,KAAK,CAACqC,GAAG,CAAE,GAAElC,OAAQ,IAAGgB,EAAG,EAAC,EAAER,SAAS,CAAC;EACxD,OAAON,OAAO,CAACE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;AAChD,CAAC;AAED,MAAM6B,WAAW,GAAG;EAChBlC,MAAM;EACNM,MAAM;EACN0B;AACF,CAAC;AACH,eAAeE,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}