{"ast":null,"code":"var util = require('utils-extend');\n/**\n * @description\n * @example\n * `**\\/*` match all files\n * `*.js`  only match current dir files\n * '**\\/*.js' match all js files\n * 'path/*.js' match js files in path\n * '!*.js' exclude js files \n */\nfunction fileMatch(filter, ignore) {\n  if (filter === null) {\n    return function () {\n      return true;\n    };\n  } else if (filter === '' || util.isArray(filter) && !filter.length) {\n    return function () {\n      return false;\n    };\n  }\n  if (util.isString(filter)) {\n    filter = [filter];\n  }\n  var match = [];\n  var negate = [];\n  var isIgnore = ignore ? 'i' : '';\n  filter.forEach(function (item) {\n    var isNegate = item.indexOf('!') === 0;\n    item = item.replace(/^!/, '').replace(/\\*(?![\\/*])/, '[^/]*?').replace('**\\/', '([^/]+\\/)*').replace(/\\{([^\\}]+)\\}/g, function ($1, $2) {\n      var collection = $2.split(',');\n      var length = collection.length;\n      var result = '(?:';\n      collection.forEach(function (item, index) {\n        result += '(' + item.trim() + ')';\n        if (index + 1 !== length) {\n          result += '|';\n        }\n      });\n      result += ')';\n      return result;\n    }).replace(/([\\/\\.])/g, '\\\\$1');\n    item = '(^' + item + '$)';\n    if (isNegate) {\n      negate.push(item);\n    } else {\n      match.push(item);\n    }\n  });\n  match = match.length ? new RegExp(match.join('|'), isIgnore) : null;\n  negate = negate.length ? new RegExp(negate.join('|'), isIgnore) : null;\n  return function (filepath) {\n    // Normalize \\\\ paths to / paths.\n    filepath = util.path.unixifyPath(filepath);\n    if (negate && negate.test(filepath)) {\n      return false;\n    }\n    if (match && match.test(filepath)) {\n      return true;\n    }\n    return false;\n  };\n}\nmodule.exports = fileMatch;","map":{"version":3,"names":["util","require","fileMatch","filter","ignore","isArray","length","isString","match","negate","isIgnore","forEach","item","isNegate","indexOf","replace","$1","$2","collection","split","result","index","trim","push","RegExp","join","filepath","path","unixifyPath","test","module","exports"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/node_modules/file-match/file-match.js"],"sourcesContent":["var util = require('utils-extend');\n/**\n * @description\n * @example\n * `**\\/*` match all files\n * `*.js`  only match current dir files\n * '**\\/*.js' match all js files\n * 'path/*.js' match js files in path\n * '!*.js' exclude js files \n */\nfunction fileMatch(filter, ignore) {\n  if (filter === null) {\n    return function() {\n      return true;\n    };\n  } else if (filter === '' || (util.isArray(filter) && !filter.length)) {\n    return function() {\n      return false;\n    };\n  }\n\n  if (util.isString(filter)) {\n    filter = [filter];\n  }\n\n  var match = [];\n  var negate = [];\n  var isIgnore = ignore ? 'i' : '';\n\n  filter.forEach(function(item) {\n    var isNegate = item.indexOf('!') === 0;\n    item = item\n      .replace(/^!/, '')\n      .replace(/\\*(?![\\/*])/, '[^/]*?')\n      .replace('**\\/', '([^/]+\\/)*')\n      .replace(/\\{([^\\}]+)\\}/g, function($1, $2) {\n        var collection = $2.split(',');\n        var length = collection.length;\n        var result = '(?:';\n\n        collection.forEach(function(item, index) {\n          result += '(' + item.trim() + ')';\n\n          if (index + 1 !== length) {\n            result += '|';\n          }\n        });\n\n        result += ')';\n\n        return result;\n      })\n      .replace(/([\\/\\.])/g, '\\\\$1');\n\n    item = '(^' + item + '$)';\n\n    if (isNegate) {\n      negate.push(item);\n    } else {\n      match.push(item);\n    }\n  });\n\n  match = match.length ?  new RegExp(match.join('|'), isIgnore) : null;\n  negate = negate.length ? new RegExp(negate.join('|'), isIgnore) : null;\n\n  return function(filepath) {\n    // Normalize \\\\ paths to / paths.\n    filepath = util.path.unixifyPath(filepath);\n\n    if (negate && negate.test(filepath)) {\n      return false;\n    }\n\n    if (match && match.test(filepath)) {\n      return true;\n    }\n\n    return false;\n  };\n}\n\nmodule.exports = fileMatch;"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,cAAc,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAAS,CAACC,MAAM,EAAEC,MAAM,EAAE;EACjC,IAAID,MAAM,KAAK,IAAI,EAAE;IACnB,OAAO,YAAW;MAChB,OAAO,IAAI;IACb,CAAC;EACH,CAAC,MAAM,IAAIA,MAAM,KAAK,EAAE,IAAKH,IAAI,CAACK,OAAO,CAACF,MAAM,CAAC,IAAI,CAACA,MAAM,CAACG,MAAO,EAAE;IACpE,OAAO,YAAW;MAChB,OAAO,KAAK;IACd,CAAC;EACH;EAEA,IAAIN,IAAI,CAACO,QAAQ,CAACJ,MAAM,CAAC,EAAE;IACzBA,MAAM,GAAG,CAACA,MAAM,CAAC;EACnB;EAEA,IAAIK,KAAK,GAAG,EAAE;EACd,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,QAAQ,GAAGN,MAAM,GAAG,GAAG,GAAG,EAAE;EAEhCD,MAAM,CAACQ,OAAO,CAAC,UAASC,IAAI,EAAE;IAC5B,IAAIC,QAAQ,GAAGD,IAAI,CAACE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;IACtCF,IAAI,GAAGA,IAAI,CACRG,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CACjBA,OAAO,CAAC,aAAa,EAAE,QAAQ,CAAC,CAChCA,OAAO,CAAC,MAAM,EAAE,YAAY,CAAC,CAC7BA,OAAO,CAAC,eAAe,EAAE,UAASC,EAAE,EAAEC,EAAE,EAAE;MACzC,IAAIC,UAAU,GAAGD,EAAE,CAACE,KAAK,CAAC,GAAG,CAAC;MAC9B,IAAIb,MAAM,GAAGY,UAAU,CAACZ,MAAM;MAC9B,IAAIc,MAAM,GAAG,KAAK;MAElBF,UAAU,CAACP,OAAO,CAAC,UAASC,IAAI,EAAES,KAAK,EAAE;QACvCD,MAAM,IAAI,GAAG,GAAGR,IAAI,CAACU,IAAI,EAAE,GAAG,GAAG;QAEjC,IAAID,KAAK,GAAG,CAAC,KAAKf,MAAM,EAAE;UACxBc,MAAM,IAAI,GAAG;QACf;MACF,CAAC,CAAC;MAEFA,MAAM,IAAI,GAAG;MAEb,OAAOA,MAAM;IACf,CAAC,CAAC,CACDL,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;IAE/BH,IAAI,GAAG,IAAI,GAAGA,IAAI,GAAG,IAAI;IAEzB,IAAIC,QAAQ,EAAE;MACZJ,MAAM,CAACc,IAAI,CAACX,IAAI,CAAC;IACnB,CAAC,MAAM;MACLJ,KAAK,CAACe,IAAI,CAACX,IAAI,CAAC;IAClB;EACF,CAAC,CAAC;EAEFJ,KAAK,GAAGA,KAAK,CAACF,MAAM,GAAI,IAAIkB,MAAM,CAAChB,KAAK,CAACiB,IAAI,CAAC,GAAG,CAAC,EAAEf,QAAQ,CAAC,GAAG,IAAI;EACpED,MAAM,GAAGA,MAAM,CAACH,MAAM,GAAG,IAAIkB,MAAM,CAACf,MAAM,CAACgB,IAAI,CAAC,GAAG,CAAC,EAAEf,QAAQ,CAAC,GAAG,IAAI;EAEtE,OAAO,UAASgB,QAAQ,EAAE;IACxB;IACAA,QAAQ,GAAG1B,IAAI,CAAC2B,IAAI,CAACC,WAAW,CAACF,QAAQ,CAAC;IAE1C,IAAIjB,MAAM,IAAIA,MAAM,CAACoB,IAAI,CAACH,QAAQ,CAAC,EAAE;MACnC,OAAO,KAAK;IACd;IAEA,IAAIlB,KAAK,IAAIA,KAAK,CAACqB,IAAI,CAACH,QAAQ,CAAC,EAAE;MACjC,OAAO,IAAI;IACb;IAEA,OAAO,KAAK;EACd,CAAC;AACH;AAEAI,MAAM,CAACC,OAAO,GAAG7B,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}