{"ast":null,"code":"var _jsxFileName = \"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part2/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ShowCountries from './ShowCountries.js';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire('dotenv').config({\n  path: './.env'\n});\n// require('dotenv').config()\nconst express = require('express');\nconst app = express();\napp.use(express.static('build'));\napp.use(express.json());\n// const User = require('./models/person')\nconst cors = require('cors');\napp.use(cors());\nconst App = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [newFilter, setNewFilter] = useState(\"\");\n  useEffect(() => {\n    console.log('effect');\n    axios.get('https://restcountries.com/v3.1/all').then(response => {\n      console.log('promise fulfilled');\n      setCountries(response.data);\n    });\n  }, []);\n  console.log('render', countries.length, 'countries');\n  const filteredCountry = countries.filter(country => country.name.official.toLowerCase().includes(newFilter.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Country Lookup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Filter countries: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newFilter,\n        onChange: event => setNewFilter(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ShowCountries, {\n      filteredCountry: filteredCountry,\n      setNewFilter: setNewFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"aiAUjWuyQlMd1xS4lqIkrrG5VGg=\");\n_c = App;\nconst PORT = \"8080\";\napp.listen(PORT, () => {\n  console.log('Server running on port 8080');\n});\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","ShowCountries","require","config","path","express","app","use","static","json","cors","App","countries","setCountries","newFilter","setNewFilter","console","log","get","then","response","data","length","filteredCountry","filter","country","name","official","toLowerCase","includes","event","target","value","PORT","listen"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part2/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ShowCountries from './ShowCountries.js'\nrequire('dotenv').config({ path: './.env' })\n// require('dotenv').config()\nconst express = require('express')\nconst app = express()\napp.use(express.static('build'))\napp.use(express.json())\n// const User = require('./models/person')\nconst cors = require('cors')\napp.use(cors())\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [newFilter, setNewFilter] = useState(\"\")\n\n  useEffect(() => {\n    console.log('effect')\n    axios\n      .get('https://restcountries.com/v3.1/all')\n      .then(response => {\n        console.log('promise fulfilled')\n        setCountries(response.data)\n      })\n  } ,[])\n\n  console.log('render', countries.length, 'countries')\n\n  const filteredCountry = countries.filter((country) =>\n  country.name.official.toLowerCase().includes(newFilter.toLowerCase()))\n  \n  return (\n    <>\n      <h2>Country Lookup</h2>\n        <div>\n          Filter countries: <input value={newFilter} onChange={event => setNewFilter(event.target.value)} />\n       </div>\n          <ShowCountries filteredCountry={filteredCountry} setNewFilter={setNewFilter} />\n      </>\n    )\n  }\nconst PORT = \"8080\";\napp.listen(PORT, () => {\n  console.log('Server running on port 8080')\n})\n\nexport default App\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,oBAAoB;AAAA;AAAA;AAC9CC,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC;EAAEC,IAAI,EAAE;AAAS,CAAC,CAAC;AAC5C;AACA,MAAMC,OAAO,GAAGH,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMI,GAAG,GAAGD,OAAO,EAAE;AACrBC,GAAG,CAACC,GAAG,CAACF,OAAO,CAACG,MAAM,CAAC,OAAO,CAAC,CAAC;AAChCF,GAAG,CAACC,GAAG,CAACF,OAAO,CAACI,IAAI,EAAE,CAAC;AACvB;AACA,MAAMC,IAAI,GAAGR,OAAO,CAAC,MAAM,CAAC;AAC5BI,GAAG,CAACC,GAAG,CAACG,IAAI,EAAE,CAAC;AAEf,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdiB,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBjB,KAAK,CACFkB,GAAG,CAAC,oCAAoC,CAAC,CACzCC,IAAI,CAACC,QAAQ,IAAI;MAChBJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChCJ,YAAY,CAACO,QAAQ,CAACC,IAAI,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENL,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEL,SAAS,CAACU,MAAM,EAAE,WAAW,CAAC;EAEpD,MAAMC,eAAe,GAAGX,SAAS,CAACY,MAAM,CAAEC,OAAO,IACjDA,OAAO,CAACC,IAAI,CAACC,QAAQ,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACf,SAAS,CAACc,WAAW,EAAE,CAAC,CAAC;EAEtE,oBACE;IAAA,wBACE;MAAA,UAAI;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK,eACrB;MAAA,WAAK,oBACe;QAAO,KAAK,EAAEd,SAAU;QAAC,QAAQ,EAAEgB,KAAK,IAAIf,YAAY,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/F,eACH,QAAC,aAAa;MAAC,eAAe,EAAET,eAAgB;MAAC,YAAY,EAAER;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAChF;AAEP,CAAC;AAAA,GA5BGJ,GAAG;AAAA,KAAHA,GAAG;AA6BT,MAAMsB,IAAI,GAAG,MAAM;AACnB3B,GAAG,CAAC4B,MAAM,CAACD,IAAI,EAAE,MAAM;EACrBjB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;AAC5C,CAAC,CAAC;AAEF,eAAeN,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}