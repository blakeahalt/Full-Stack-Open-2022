{"ast":null,"code":"var _jsxFileName = \"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/src/components/Togglable.js\",\n  _s = $RefreshSig$();\nimport { useState, forwardRef, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Togglable = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, refs) => {\n  _s();\n  const [visible, setVisible] = useState(false);\n  const hideWhenVisible = {\n    display: visible ? 'none' : ''\n  };\n  const showWhenVisible = {\n    display: visible ? '' : 'none'\n  };\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n  useImperativeHandle(refs, () => {\n    return {\n      toggleVisibility\n    };\n  });\n  Togglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: hideWhenVisible,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        children: props.buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: showWhenVisible,\n      children: [props.children, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}, \"7Y5lBLdF9mkfoiy3F9Lk5HPUzvA=\")), \"7Y5lBLdF9mkfoiy3F9Lk5HPUzvA=\");\n_c2 = Togglable;\nexport default Togglable;\n\n// import { useState } from 'react'\n\n// const Togglable = (props) => {\n//   const [visible, setVisible] = useState(false)\n\n//   const hideWhenVisible = { display: visible ? 'none' : '' }\n//   const showWhenVisible = { display: visible ? '' : 'none' }\n\n//   const toggleVisibility = () => {\n//     setVisible(!visible)\n//   }\n\n//   return (\n//     <div>\n//       <div style={hideWhenVisible}>\n//         <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n//       </div>\n//       <div style={showWhenVisible}>\n//         {props.children}\n//         <button onClick={toggleVisibility}>cancel</button>\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default Togglable\nvar _c, _c2;\n$RefreshReg$(_c, \"Togglable$forwardRef\");\n$RefreshReg$(_c2, \"Togglable\");","map":{"version":3,"names":["useState","forwardRef","useImperativeHandle","PropTypes","Togglable","props","refs","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","propTypes","buttonLabel","string","isRequired","children"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/src/components/Togglable.js"],"sourcesContent":["import { useState, forwardRef, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Togglable = forwardRef((props, refs) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(refs, () => {\n    return {\n      toggleVisibility\n    }\n  })\n  \n  Togglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n  }\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nexport default Togglable\n\n// import { useState } from 'react'\n\n// const Togglable = (props) => {\n//   const [visible, setVisible] = useState(false)\n\n//   const hideWhenVisible = { display: visible ? 'none' : '' }\n//   const showWhenVisible = { display: visible ? '' : 'none' }\n\n//   const toggleVisibility = () => {\n//     setVisible(!visible)\n//   }\n\n//   return (\n//     <div>\n//       <div style={hideWhenVisible}>\n//         <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n//       </div>\n//       <div style={showWhenVisible}>\n//         {props.children}\n//         <button onClick={toggleVisibility}>cancel</button>\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default Togglable"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,mBAAmB,QAAQ,OAAO;AACjE,OAAOC,SAAS,MAAM,YAAY;AAAA;AAGlC,MAAMC,SAAS,iCAAGH,UAAU,SAAC,CAACI,KAAK,EAAEC,IAAI,KAAK;EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMS,eAAe,GAAG;IAAEC,OAAO,EAAEH,OAAO,GAAG,MAAM,GAAG;EAAG,CAAC;EAC1D,MAAMI,eAAe,GAAG;IAAED,OAAO,EAAEH,OAAO,GAAG,EAAE,GAAG;EAAO,CAAC;EAE1D,MAAMK,gBAAgB,GAAG,MAAM;IAC7BJ,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAEDL,mBAAmB,CAACI,IAAI,EAAE,MAAM;IAC9B,OAAO;MACLM;IACF,CAAC;EACH,CAAC,CAAC;EAEFR,SAAS,CAACS,SAAS,GAAG;IACpBC,WAAW,EAAEX,SAAS,CAACY,MAAM,CAACC;EAChC,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,KAAK,EAAEP,eAAgB;MAAA,uBAC1B;QAAQ,OAAO,EAAEG,gBAAiB;QAAA,UAAEP,KAAK,CAACS;MAAW;QAAA;QAAA;QAAA;MAAA;IAAU;MAAA;MAAA;MAAA;IAAA,QAC3D,eACN;MAAK,KAAK,EAAEH,eAAgB;MAAA,WACzBN,KAAK,CAACY,QAAQ,eACf;QAAQ,OAAO,EAAEL,gBAAiB;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9C;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC,kCAAC;AAAA,MA/BIR,SAAS;AAiCf,eAAeA,SAAS;;AAExB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}