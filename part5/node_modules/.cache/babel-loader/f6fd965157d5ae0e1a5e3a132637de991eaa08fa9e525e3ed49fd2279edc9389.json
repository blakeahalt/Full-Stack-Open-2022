{"ast":null,"code":"import _objectSpread from\"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import { useState, useEffect, useRef } from 'react'\n// import Note from './components/Note'\n// import Notification from './components/Notification'\n// import Footer from './components/Footer'\n// import LoginForm from './components/LoginForm'\n// import NoteForm from './components/NoteForm'\n// import Togglable from './components/Togglable'\n// import noteService from './services/notes'\n// import loginService from './services/login'\n// const App = () => {\n//   const [notes, setNotes] = useState([])\n//   const [showAll, setShowAll] = useState(true)\n//   const [errorMessage, setErrorMessage] = useState(null)\n//   const [username, setUsername] = useState('') \n//   const [password, setPassword] = useState('') \n//   const [user, setUser] = useState(null)\n//   const [label, setLabel] = useState('')\n//   const noteFormRef = useRef()\n//   useEffect(() => {\n//     noteService\n//       .getAll()\n//       .then(initialNotes => {\n//         setNotes(initialNotes)\n//       })\n//   }, [label])\n//   useEffect(() => {\n//     const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n//     if (loggedUserJSON) {\n//       const user = JSON.parse(loggedUserJSON)\n//       setUser(user)\n//       noteService.setToken(user.token)\n//     }\n//   }, [])\n//   const updateLabel = (label) => {\n//     setTimeout(() => {\n//         setLabel(label);\n//     }, 0);\n// }\n//   const handleLogin = async (event) => {\n//     event.preventDefault()\n//     try {\n//       const user = await loginService.login({\n//         username, password,\n//       })\n//       window.localStorage.setItem(\n//         'loggedNoteappUser', JSON.stringify(user)\n//       ) \n//       noteService.setToken(user.token)\n//       setUser(user)\n//       setUsername('')\n//       setPassword('')\n//       console.log('logging in with', username, password)\n//     } catch (exception) {\n//       setErrorMessage('Wrong credentials')\n//       setTimeout(() => {\n//         setErrorMessage(null)\n//       }, 5000)\n//     }\n//   }\n//   const handleLogOut =(e) => {\n//     e.preventDefault()\n//     window.localStorage.clear()\n//     setUser(null)\n//   }\n//   const addNote = (noteObject) => {\n//     noteFormRef.current.toggleVisibility()\n//     noteService\n//       .create(noteObject)\n//       .then(returnedNote => {\n//         setNotes(notes.concat(returnedNote))\n//       })\n//   }\n//   // const addNote = (event) => {\n//   //   event.preventDefault()\n//   //   noteFormRef.current.toggleVisibility()\n//   //   const noteObject = {\n//   //       content: newNote,\n//   //       date: new Date().toISOString(),\n//   //       important: Math.random() > 0.5,\n//   //       id: notes.length + 1,\n//   //     }\n//   //   noteService\n//   //   .create(noteObject)\n//   //   .then(returnedNote => {     \n//   //     setNotes(notes.concat(returnedNote))\n//   //     setNewNote('')\n//   //   })\n//   // }\n//   // const addNote = (event) => {\n//   //   event.preventDefault()\n//     // const noteObject = {\n//     //   content: newNote,\n//     //   date: new Date().toISOString(),\n//     //   important: Math.random() > 0.5,\n//     //   id: notes.length + 1,\n//     // }\n//   //   noteService\n//   //     .create(noteObject)\n//   //     .then(returnedNote => {\n//   //       setNotes(notes.concat(returnedNote))\n//   //       setNewNote('')\n//   //     })\n//   // }\n//   // const handleNoteChange = (event) => {\n//   //   setNewNote(event.target.value)\n//   // }\n//   const toggleImportanceOf = id => {\n//     const note = notes.find(n => n.id === id)\n//     const changedNote = { ...note, important: !note.important }\n//     noteService\n//       .update(id, changedNote)\n//       .then(returnedNote => {\n//         setNotes(notes.map(note => note._id === id ? returnedNote : note))\n//       })\n//       .catch(error => {\n//         setErrorMessage(\n//           `Note '${note.content}' was already removed from server`\n//         )\n//         setTimeout(() => {\n//           setErrorMessage(null)\n//         }, 5000)\n//         setNotes(notes.filter(n => n.id !== id))\n//       })\n//   }\n//   // const loginForm = () => (\n//   //   <form onSubmit={handleLogin}>\n//   //     <div>\n//   //       username\n//   //         <input\n//   //         type=\"text\"\n//   //         value={username}\n//   //         name=\"Username\"\n//   //         onChange={({ target }) => setUsername(target.value)}\n//   //       />\n//   //     </div>\n//   //     <div>\n//   //       password\n//   //         <input\n//   //         type=\"password\"\n//   //         value={password}\n//   //         name=\"Password\"\n//   //         onChange={({ target }) => setPassword(target.value)}\n//   //       />\n//   //     </div>\n//   //     <button type=\"submit\">login</button>\n//   //   </form>      \n//   // )\n//   // const loginForm = () => {\n//   //   const hideWhenVisible = { display: loginVisible ? 'none' : '' }\n//   //   const showWhenVisible = { display: loginVisible ? '' : 'none' }\n//   //   return (\n//   //     <div>\n//   //       <div style={hideWhenVisible}>\n//   //         <button onClick={() => setLoginVisible(true)}>log in</button>\n//   //       </div>\n//   //       <div style={showWhenVisible}>\n//   //         <LoginForm\n//   //           username={username}\n//   //           password={password}\n//   //           handleUsernameChange={({ target }) => setUsername(target.value)}\n//   //           handlePasswordChange={({ target }) => setPassword(target.value)}\n//   //           handleSubmit={handleLogin}\n//   //         />\n//   //         <button onClick={() => setLoginVisible(false)}>cancel</button>\n//   //       </div>\n//   //     </div>\n//   //   )\n//   // }\n//   const noteForm = () => (\n//     <Togglable buttonLabel='new note' ref={noteFormRef}>\n//       <NoteForm createNote={addNote} />\n//     </Togglable>\n//   )\n//   // const NoteForm = ({ onSubmit, handleChange, value}) => {\n//   //   return (\n//   //     <div>\n//   //       <h2>Create a new note</h2>\n//   //       <form onSubmit={onSubmit}>\n//   //         <input\n//   //           value={value}\n//   //           onChange={handleChange}\n//   //         />\n//   //         <button type=\"submit\">save</button>\n//   //       </form>\n//   //     </div>\n//   //   )\n//   // }\n//   // const noteForm = () => (\n//   //   <form onSubmit={addNote}>\n//   //     <input\n//   //       value={newNote}\n//   //       onChange={handleNoteChange}\n//   //     />\n//   //     <button type=\"submit\">save</button>\n//   //   </form>  \n//   // )\n//   const notesToShow = showAll\n//     ? notes\n//     : notes.filter(note => note.important)\n//   return (\n//     <div>\n//       <h1>Notes</h1>\n//       <Notification message={errorMessage} />\n//       {user === null ?\n//         <Togglable buttonLabel='login'>\n//           <LoginForm\n//             username={username}\n//             password={password}\n//             handleUsernameChange={({ target }) => setUsername(target.value)}\n//             handlePasswordChange={({ target }) => setPassword(target.value)}\n//             handleSubmit={handleLogin}\n//           />\n//         </Togglable> :\n//       <div>\n//         <p>{user.name} logged in</p>\n//         <button onClick={handleLogOut}>Logout</button>\n//       </div>\n//     }\n//       <div style={{marginTop: 10}}>\n//         <button onClick={() => setShowAll(!showAll)}>\n//           show {showAll ? 'important' : 'all' }\n//         </button>\n//       </div>   \n//       <ul>\n//         {notesToShow.map(note => \n//           <Note\n//             key={note.id}\n//             note={note}\n//             toggleImportance={toggleImportanceOf}\n//             updateLabel={updateLabel}\n//           />\n//         )}\n//       </ul>\n//         {noteForm()}\n//       <Footer />\n//     </div>\n//   )\n// }\n// export default App\n//Cypress test\nimport{useState,useEffect,useRef}from'react';import Note from'./components/Note';import Notification from'./components/Notification';import Footer from'./components/Footer';import LoginForm from'./components/LoginForm';import NoteForm from'./components/NoteForm';import Togglable from'./components/Togglable';import noteService from'./services/notes';import loginService from'./services/login';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),showAll=_useState4[0],setShowAll=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),errorMessage=_useState6[0],setErrorMessage=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),username=_useState8[0],setUsername=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),password=_useState10[0],setPassword=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),user=_useState12[0],setUser=_useState12[1];useEffect(function(){noteService.getAll().then(function(initialNotes){setNotes(initialNotes);});},[]);useEffect(function(){var loggedUserJSON=window.localStorage.getItem('loggedNoteappUser');if(loggedUserJSON){var _user=JSON.parse(loggedUserJSON);setUser(_user);noteService.setToken(_user.token);}},[]);var noteFormRef=useRef();var handleLogin=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event){var _user2;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:event.preventDefault();_context.prev=1;_context.next=4;return loginService.login({username:username,password:password});case 4:_user2=_context.sent;noteService.setToken(_user2.token);window.localStorage.setItem('loggedNoteappUser',JSON.stringify(_user2));setUser(_user2);setUsername('');setPassword('');_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](1);setErrorMessage('wrong credentials');setTimeout(function(){setErrorMessage(null);},5000);case 16:case\"end\":return _context.stop();}},_callee,null,[[1,12]]);}));return function handleLogin(_x){return _ref.apply(this,arguments);};}();// const handleLogOut =(e) => {\n//       e.preventDefault()\n//       window.localStorage.clear()\n//       setUser(null)\n//     }\nvar addNote=function addNote(noteObject){noteService.create(noteObject).then(function(returnedNote){setNotes(notes.concat(returnedNote));noteFormRef.current.toggleVisibility();});};var notesToShow=showAll?notes:notes.filter(function(note){return note.important;});var toggleImportanceOf=function toggleImportanceOf(id){var note=notes.find(function(n){return n.id===id;});var changedNote=_objectSpread(_objectSpread({},note),{},{important:!note.important});noteService.update(id,changedNote).then(function(returnedNote){setNotes(notes.map(function(note){return note.id!==id?note:returnedNote;}));}).catch(function(){setErrorMessage(\"Note '\".concat(note.content,\"' was already removed from server\"));setTimeout(function(){setErrorMessage(null);},5000);setNotes(notes.filter(function(n){return n.id!==id;}));});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Notes app\"}),/*#__PURE__*/_jsx(Notification,{message:errorMessage}),!user&&/*#__PURE__*/_jsx(Togglable,{buttonLabel:\"login\",children:/*#__PURE__*/_jsx(LoginForm,{username:username,password:password,handleUsernameChange:function handleUsernameChange(_ref2){var target=_ref2.target;return setUsername(target.value);},handlePasswordChange:function handlePasswordChange(_ref3){var target=_ref3.target;return setPassword(target.value);},handleSubmit:handleLogin})}),user&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[user.name,\" logged in\"]}),/*#__PURE__*/_jsx(Togglable,{buttonLabel:\"new note\",ref:noteFormRef,children:/*#__PURE__*/_jsx(NoteForm,{createNote:addNote})})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return setShowAll(!showAll);},children:[\"show \",showAll?'important':'all']})}),/*#__PURE__*/_jsx(\"ul\",{children:notesToShow.map(function(note){return/*#__PURE__*/_jsx(Note,{note:note,toggleImportance:function toggleImportance(){return toggleImportanceOf(note.id);}},note.id);})}),/*#__PURE__*/_jsx(Footer,{})]});};export default App;","map":{"version":3,"names":["useState","useEffect","useRef","Note","Notification","Footer","LoginForm","NoteForm","Togglable","noteService","loginService","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","getAll","then","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","noteFormRef","handleLogin","event","preventDefault","login","setItem","stringify","setTimeout","addNote","noteObject","create","returnedNote","concat","current","toggleVisibility","notesToShow","filter","note","important","toggleImportanceOf","id","find","n","changedNote","update","map","catch","content","target","value","name"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/src/App.js"],"sourcesContent":["// import { useState, useEffect, useRef } from 'react'\n\n// import Note from './components/Note'\n// import Notification from './components/Notification'\n// import Footer from './components/Footer'\n// import LoginForm from './components/LoginForm'\n// import NoteForm from './components/NoteForm'\n// import Togglable from './components/Togglable'\n// import noteService from './services/notes'\n// import loginService from './services/login'\n\n\n// const App = () => {\n//   const [notes, setNotes] = useState([])\n//   const [showAll, setShowAll] = useState(true)\n//   const [errorMessage, setErrorMessage] = useState(null)\n//   const [username, setUsername] = useState('') \n//   const [password, setPassword] = useState('') \n//   const [user, setUser] = useState(null)\n//   const [label, setLabel] = useState('')\n\n//   const noteFormRef = useRef()\n\n//   useEffect(() => {\n//     noteService\n//       .getAll()\n//       .then(initialNotes => {\n//         setNotes(initialNotes)\n//       })\n//   }, [label])\n\n//   useEffect(() => {\n//     const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n//     if (loggedUserJSON) {\n//       const user = JSON.parse(loggedUserJSON)\n//       setUser(user)\n//       noteService.setToken(user.token)\n//     }\n//   }, [])\n\n//   const updateLabel = (label) => {\n//     setTimeout(() => {\n//         setLabel(label);\n//     }, 0);\n// }\n\n//   const handleLogin = async (event) => {\n//     event.preventDefault()\n//     try {\n//       const user = await loginService.login({\n//         username, password,\n//       })\n\n//       window.localStorage.setItem(\n//         'loggedNoteappUser', JSON.stringify(user)\n//       ) \n//       noteService.setToken(user.token)\n//       setUser(user)\n//       setUsername('')\n//       setPassword('')\n//       console.log('logging in with', username, password)\n//     } catch (exception) {\n//       setErrorMessage('Wrong credentials')\n//       setTimeout(() => {\n//         setErrorMessage(null)\n//       }, 5000)\n//     }\n//   }\n\n//   const handleLogOut =(e) => {\n//     e.preventDefault()\n//     window.localStorage.clear()\n//     setUser(null)\n//   }\n\n//   const addNote = (noteObject) => {\n//     noteFormRef.current.toggleVisibility()\n//     noteService\n//       .create(noteObject)\n//       .then(returnedNote => {\n//         setNotes(notes.concat(returnedNote))\n//       })\n//   }\n//   // const addNote = (event) => {\n//   //   event.preventDefault()\n//   //   noteFormRef.current.toggleVisibility()\n//   //   const noteObject = {\n//   //       content: newNote,\n//   //       date: new Date().toISOString(),\n//   //       important: Math.random() > 0.5,\n//   //       id: notes.length + 1,\n//   //     }\n//   //   noteService\n//   //   .create(noteObject)\n//   //   .then(returnedNote => {     \n//   //     setNotes(notes.concat(returnedNote))\n//   //     setNewNote('')\n//   //   })\n//   // }\n//   // const addNote = (event) => {\n//   //   event.preventDefault()\n//     // const noteObject = {\n//     //   content: newNote,\n//     //   date: new Date().toISOString(),\n//     //   important: Math.random() > 0.5,\n//     //   id: notes.length + 1,\n//     // }\n\n//   //   noteService\n//   //     .create(noteObject)\n//   //     .then(returnedNote => {\n//   //       setNotes(notes.concat(returnedNote))\n//   //       setNewNote('')\n//   //     })\n//   // }\n\n//   // const handleNoteChange = (event) => {\n//   //   setNewNote(event.target.value)\n//   // }\n\n//   const toggleImportanceOf = id => {\n//     const note = notes.find(n => n.id === id)\n//     const changedNote = { ...note, important: !note.important }\n  \n//     noteService\n//       .update(id, changedNote)\n//       .then(returnedNote => {\n//         setNotes(notes.map(note => note._id === id ? returnedNote : note))\n//       })\n//       .catch(error => {\n//         setErrorMessage(\n//           `Note '${note.content}' was already removed from server`\n//         )\n//         setTimeout(() => {\n//           setErrorMessage(null)\n//         }, 5000)\n//         setNotes(notes.filter(n => n.id !== id))\n//       })\n//   }\n\n//   // const loginForm = () => (\n//   //   <form onSubmit={handleLogin}>\n//   //     <div>\n//   //       username\n//   //         <input\n//   //         type=\"text\"\n//   //         value={username}\n//   //         name=\"Username\"\n//   //         onChange={({ target }) => setUsername(target.value)}\n//   //       />\n//   //     </div>\n//   //     <div>\n//   //       password\n//   //         <input\n//   //         type=\"password\"\n//   //         value={password}\n//   //         name=\"Password\"\n//   //         onChange={({ target }) => setPassword(target.value)}\n//   //       />\n//   //     </div>\n//   //     <button type=\"submit\">login</button>\n//   //   </form>      \n//   // )\n  \n  \n  \n//   // const loginForm = () => {\n//   //   const hideWhenVisible = { display: loginVisible ? 'none' : '' }\n//   //   const showWhenVisible = { display: loginVisible ? '' : 'none' }\n\n//   //   return (\n//   //     <div>\n//   //       <div style={hideWhenVisible}>\n//   //         <button onClick={() => setLoginVisible(true)}>log in</button>\n//   //       </div>\n//   //       <div style={showWhenVisible}>\n//   //         <LoginForm\n//   //           username={username}\n//   //           password={password}\n//   //           handleUsernameChange={({ target }) => setUsername(target.value)}\n//   //           handlePasswordChange={({ target }) => setPassword(target.value)}\n//   //           handleSubmit={handleLogin}\n//   //         />\n//   //         <button onClick={() => setLoginVisible(false)}>cancel</button>\n//   //       </div>\n//   //     </div>\n//   //   )\n//   // }\n\n//   const noteForm = () => (\n//     <Togglable buttonLabel='new note' ref={noteFormRef}>\n//       <NoteForm createNote={addNote} />\n//     </Togglable>\n//   )\n//   // const NoteForm = ({ onSubmit, handleChange, value}) => {\n//   //   return (\n//   //     <div>\n//   //       <h2>Create a new note</h2>\n  \n//   //       <form onSubmit={onSubmit}>\n//   //         <input\n//   //           value={value}\n//   //           onChange={handleChange}\n//   //         />\n//   //         <button type=\"submit\">save</button>\n//   //       </form>\n//   //     </div>\n//   //   )\n//   // }\n\n//   // const noteForm = () => (\n//   //   <form onSubmit={addNote}>\n//   //     <input\n//   //       value={newNote}\n//   //       onChange={handleNoteChange}\n//   //     />\n//   //     <button type=\"submit\">save</button>\n//   //   </form>  \n//   // )\n\n//   const notesToShow = showAll\n//     ? notes\n//     : notes.filter(note => note.important)\n\n//   return (\n//     <div>\n//       <h1>Notes</h1>\n//       <Notification message={errorMessage} />\n\n//       {user === null ?\n//         <Togglable buttonLabel='login'>\n//           <LoginForm\n//             username={username}\n//             password={password}\n//             handleUsernameChange={({ target }) => setUsername(target.value)}\n//             handlePasswordChange={({ target }) => setPassword(target.value)}\n//             handleSubmit={handleLogin}\n//           />\n//         </Togglable> :\n//       <div>\n//         <p>{user.name} logged in</p>\n//         <button onClick={handleLogOut}>Logout</button>\n//       </div>\n//     }\n\n//       <div style={{marginTop: 10}}>\n//         <button onClick={() => setShowAll(!showAll)}>\n//           show {showAll ? 'important' : 'all' }\n//         </button>\n//       </div>   \n//       <ul>\n//         {notesToShow.map(note => \n//           <Note\n//             key={note.id}\n//             note={note}\n//             toggleImportance={toggleImportanceOf}\n//             updateLabel={updateLabel}\n//           />\n//         )}\n//       </ul>\n//         {noteForm()}\n\n//       <Footer />\n//     </div>\n//   )\n// }\n\n// export default App\n\n//Cypress test\nimport { useState, useEffect, useRef } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport LoginForm from './components/LoginForm'\nimport NoteForm from './components/NoteForm'\nimport Togglable from './components/Togglable'\nimport noteService from './services/notes'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const noteFormRef = useRef()\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      noteService.setToken(user.token)\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      )\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  // const handleLogOut =(e) => {\n  //       e.preventDefault()\n  //       window.localStorage.clear()\n  //       setUser(null)\n  //     }\n\n  const addNote = (noteObject) => {\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        noteFormRef.current.toggleVisibility()\n      })\n  }\n  \n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote).then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(() => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  return (\n    <div>\n      <h1>Notes app</h1>\n\n      <Notification message={errorMessage} />\n\n      {!user &&\n        <Togglable buttonLabel=\"login\">\n          <LoginForm\n            username={username}\n            password={password}\n            handleUsernameChange={({ target }) => setUsername(target.value)}\n            handlePasswordChange={({ target }) => setPassword(target.value)}\n            handleSubmit={handleLogin}\n          />\n        </Togglable>\n      }\n      {user &&\n        <div>\n          <p>{user.name} logged in</p>\n          {/* <button onClick={handleLogOut}>Logout</button> */}\n          <Togglable buttonLabel=\"new note\" ref={noteFormRef}>\n            <NoteForm createNote={addNote} />\n          </Togglable>\n        </div>\n      }\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}