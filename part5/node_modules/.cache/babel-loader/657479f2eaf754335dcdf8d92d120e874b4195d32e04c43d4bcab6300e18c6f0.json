{"ast":null,"code":"var _jsxFileName = \"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport LoginForm from './components/LoginForm';\nimport NoteForm from './components/NoteForm';\nimport Togglable from './components/Togglable';\nimport noteService from './services/notes';\nimport loginService from './services/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  // const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true);\n  const [loginVisible, setLoginVisible] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const noteFormRef = useRef();\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      noteService.setToken(user.token);\n    }\n  }, []);\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user));\n      noteService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n      console.log('logging in with', username, password);\n    } catch (exception) {\n      setErrorMessage('Wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n  const handleLogOut = e => {\n    e.preventDefault();\n    window.localStorage.clear();\n    setUser(null);\n  };\n  const addNote = noteObject => {\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n    });\n  };\n  // const addNote = (event) => {\n  //   event.preventDefault()\n  //   noteFormRef.current.toggleVisibility()\n  //   const noteObject = {\n  //       content: newNote,\n  //       date: new Date().toISOString(),\n  //       important: Math.random() > 0.5,\n  //       id: notes.length + 1,\n  //     }\n  //   noteService\n  //   .create(noteObject)\n  //   .then(returnedNote => {     \n  //     setNotes(notes.concat(returnedNote))\n  //     setNewNote('')\n  //   })\n  // }\n  // const addNote = (event) => {\n  //   event.preventDefault()\n  // const noteObject = {\n  //   content: newNote,\n  //   date: new Date().toISOString(),\n  //   important: Math.random() > 0.5,\n  //   id: notes.length + 1,\n  // }\n\n  //   noteService\n  //     .create(noteObject)\n  //     .then(returnedNote => {\n  //       setNotes(notes.concat(returnedNote))\n  //       setNewNote('')\n  //     })\n  // }\n\n  // const handleNoteChange = (event) => {\n  //   setNewNote(event.target.value)\n  // }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = {\n      ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n\n  // const loginForm = () => (\n  //   <form onSubmit={handleLogin}>\n  //     <div>\n  //       username\n  //         <input\n  //         type=\"text\"\n  //         value={username}\n  //         name=\"Username\"\n  //         onChange={({ target }) => setUsername(target.value)}\n  //       />\n  //     </div>\n  //     <div>\n  //       password\n  //         <input\n  //         type=\"password\"\n  //         value={password}\n  //         name=\"Password\"\n  //         onChange={({ target }) => setPassword(target.value)}\n  //       />\n  //     </div>\n  //     <button type=\"submit\">login</button>\n  //   </form>      \n  // )\n\n  // const loginForm = () => {\n  //   const hideWhenVisible = { display: loginVisible ? 'none' : '' }\n  //   const showWhenVisible = { display: loginVisible ? '' : 'none' }\n\n  //   return (\n  //     <div>\n  //       <div style={hideWhenVisible}>\n  //         <button onClick={() => setLoginVisible(true)}>log in</button>\n  //       </div>\n  //       <div style={showWhenVisible}>\n  //         <LoginForm\n  //           username={username}\n  //           password={password}\n  //           handleUsernameChange={({ target }) => setUsername(target.value)}\n  //           handlePasswordChange={({ target }) => setPassword(target.value)}\n  //           handleSubmit={handleLogin}\n  //         />\n  //         <button onClick={() => setLoginVisible(false)}>cancel</button>\n  //       </div>\n  //     </div>\n  //   )\n  // }\n\n  const noteForm = () => /*#__PURE__*/_jsxDEV(Togglable, {\n    buttonLabel: \"new note\",\n    ref: noteFormRef,\n    children: /*#__PURE__*/_jsxDEV(NoteForm, {\n      createNote: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n  // const NoteForm = ({ onSubmit, handleChange, value}) => {\n  //   return (\n  //     <div>\n  //       <h2>Create a new note</h2>\n\n  //       <form onSubmit={onSubmit}>\n  //         <input\n  //           value={value}\n  //           onChange={handleChange}\n  //         />\n  //         <button type=\"submit\">save</button>\n  //       </form>\n  //     </div>\n  //   )\n  // }\n\n  // const noteForm = () => (\n  //   <form onSubmit={addNote}>\n  //     <input\n  //       value={newNote}\n  //       onChange={handleNoteChange}\n  //     />\n  //     <button type=\"submit\">save</button>\n  //   </form>  \n  // )\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), user === null ? /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"login\",\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        username: username,\n        password: password,\n        handleUsernameChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return setUsername(target.value);\n        },\n        handlePasswordChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return setPassword(target.value);\n        },\n        handleSubmit: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.name, \" logged-in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogOut,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DVuWTzDA686xSV9iS5lCd4fIBZo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Note","Notification","Footer","LoginForm","NoteForm","Togglable","noteService","loginService","App","notes","setNotes","showAll","setShowAll","loginVisible","setLoginVisible","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","noteFormRef","getAll","then","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","console","log","exception","setTimeout","handleLogOut","e","clear","addNote","noteObject","create","returnedNote","concat","toggleImportanceOf","id","note","find","n","changedNote","important","update","map","catch","error","content","filter","noteForm","notesToShow","target","value","name","marginTop"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\n\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport LoginForm from './components/LoginForm'\nimport NoteForm from './components/NoteForm'\nimport Togglable from './components/Togglable'\nimport noteService from './services/notes'\nimport loginService from './services/login'\n\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  // const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [loginVisible, setLoginVisible] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null)\n\n    const noteFormRef = useRef()\n\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      ) \n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      console.log('logging in with', username, password)\n    } catch (exception) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogOut =(e) => {\n    e.preventDefault()\n    window.localStorage.clear()\n    setUser(null)\n  }\n\n  const addNote = (noteObject) => {\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n      })\n  }\n  // const addNote = (event) => {\n  //   event.preventDefault()\n  //   noteFormRef.current.toggleVisibility()\n  //   const noteObject = {\n  //       content: newNote,\n  //       date: new Date().toISOString(),\n  //       important: Math.random() > 0.5,\n  //       id: notes.length + 1,\n  //     }\n  //   noteService\n  //   .create(noteObject)\n  //   .then(returnedNote => {     \n  //     setNotes(notes.concat(returnedNote))\n  //     setNewNote('')\n  //   })\n  // }\n  // const addNote = (event) => {\n  //   event.preventDefault()\n    // const noteObject = {\n    //   content: newNote,\n    //   date: new Date().toISOString(),\n    //   important: Math.random() > 0.5,\n    //   id: notes.length + 1,\n    // }\n\n  //   noteService\n  //     .create(noteObject)\n  //     .then(returnedNote => {\n  //       setNotes(notes.concat(returnedNote))\n  //       setNewNote('')\n  //     })\n  // }\n\n  // const handleNoteChange = (event) => {\n  //   setNewNote(event.target.value)\n  // }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  // const loginForm = () => (\n  //   <form onSubmit={handleLogin}>\n  //     <div>\n  //       username\n  //         <input\n  //         type=\"text\"\n  //         value={username}\n  //         name=\"Username\"\n  //         onChange={({ target }) => setUsername(target.value)}\n  //       />\n  //     </div>\n  //     <div>\n  //       password\n  //         <input\n  //         type=\"password\"\n  //         value={password}\n  //         name=\"Password\"\n  //         onChange={({ target }) => setPassword(target.value)}\n  //       />\n  //     </div>\n  //     <button type=\"submit\">login</button>\n  //   </form>      \n  // )\n  \n  \n  \n  // const loginForm = () => {\n  //   const hideWhenVisible = { display: loginVisible ? 'none' : '' }\n  //   const showWhenVisible = { display: loginVisible ? '' : 'none' }\n\n  //   return (\n  //     <div>\n  //       <div style={hideWhenVisible}>\n  //         <button onClick={() => setLoginVisible(true)}>log in</button>\n  //       </div>\n  //       <div style={showWhenVisible}>\n  //         <LoginForm\n  //           username={username}\n  //           password={password}\n  //           handleUsernameChange={({ target }) => setUsername(target.value)}\n  //           handlePasswordChange={({ target }) => setPassword(target.value)}\n  //           handleSubmit={handleLogin}\n  //         />\n  //         <button onClick={() => setLoginVisible(false)}>cancel</button>\n  //       </div>\n  //     </div>\n  //   )\n  // }\n\n  const noteForm = () => (\n    <Togglable buttonLabel='new note' ref={noteFormRef}>\n      <NoteForm createNote={addNote} />\n    </Togglable>\n  )\n  // const NoteForm = ({ onSubmit, handleChange, value}) => {\n  //   return (\n  //     <div>\n  //       <h2>Create a new note</h2>\n  \n  //       <form onSubmit={onSubmit}>\n  //         <input\n  //           value={value}\n  //           onChange={handleChange}\n  //         />\n  //         <button type=\"submit\">save</button>\n  //       </form>\n  //     </div>\n  //   )\n  // }\n\n  // const noteForm = () => (\n  //   <form onSubmit={addNote}>\n  //     <input\n  //       value={newNote}\n  //       onChange={handleNoteChange}\n  //     />\n  //     <button type=\"submit\">save</button>\n  //   </form>  \n  // )\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ?\n        <Togglable buttonLabel='login'>\n          <LoginForm\n            username={username}\n            password={password}\n            handleUsernameChange={({ target }) => setUsername(target.value)}\n            handlePasswordChange={({ target }) => setPassword(target.value)}\n            handleSubmit={handleLogin}\n          />\n        </Togglable> :\n      <div>\n        <p>{user.name} logged-in</p>\n        <button onClick={handleLogOut}>Logout</button>\n      </div>\n    }\n\n      <div style={{marginTop: 10}}>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      {/* <Togglable buttonLabel=\"new note\">\n        <NoteForm\n          onSubmit={addNote}\n          value={newNote}\n          handleChange={handleNoteChange}\n        />\n      </Togglable> */}\n        {/* {NoteForm()} */}\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}