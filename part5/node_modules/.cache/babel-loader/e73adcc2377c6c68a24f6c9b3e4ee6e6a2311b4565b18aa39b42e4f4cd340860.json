{"ast":null,"code":"var _jsxFileName = \"/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/src/components/Togglable.js\",\n  _s = $RefreshSig$();\n// import { useState, forwardRef, useImperativeHandle } from 'react'\n// import PropTypes from 'prop-types'\n\n// const Togglable = forwardRef((props, refs) => {\n//   const [visible, setVisible] = useState(false)\n\n//   const hideWhenVisible = { display: visible ? 'none' : '' }\n//   const showWhenVisible = { display: visible ? '' : 'none' }\n\n//   const toggleVisibility = () => {\n//     setVisible(!visible)\n//   }\n\n//   useImperativeHandle(refs, () => {\n//     return {\n//       toggleVisibility\n//     }\n//   })\n\n//   Togglable.propTypes = {\n//     buttonLabel: PropTypes.string.isRequired\n//   }\n\n//   Togglable.displayName = 'Togglable'\n\n//   return (\n//     <div>\n//       <div style={hideWhenVisible}>\n//         <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n//       </div>\n//       <div style={showWhenVisible} className='togglableContent'>\n//         {props.children}\n//         <button onClick={toggleVisibility}>cancel</button>\n//       </div>\n//     </div>\n//   )\n// })\n\n// export default Togglable\n\n// // import { useState } from 'react'\n\n// // const Togglable = (props) => {\n// //   const [visible, setVisible] = useState(false)\n\n// //   const hideWhenVisible = { display: visible ? 'none' : '' }\n// //   const showWhenVisible = { display: visible ? '' : 'none' }\n\n// //   const toggleVisibility = () => {\n// //     setVisible(!visible)\n// //   }\n\n// //   return (\n// //     <div>\n// //       <div style={hideWhenVisible}>\n// //         <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n// //       </div>\n// //       <div style={showWhenVisible}>\n// //         {props.children}\n// //         <button onClick={toggleVisibility}>cancel</button>\n// //       </div>\n// //     </div>\n// //   )\n// // }\n\n// // export default Togglable\n//Cypress\nimport { useState, useImperativeHandle, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Togglable = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [visible, setVisible] = useState(false);\n  const hideWhenVisible = {\n    display: visible ? 'none' : ''\n  };\n  const showWhenVisible = {\n    display: visible ? '' : 'none'\n  };\n  console.log(visible);\n  const toggleVisibility = () => {\n    console.log('PERKELE');\n    setVisible(!visible);\n  };\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: hideWhenVisible,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        children: props.buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: showWhenVisible,\n      className: \"togglableContent\",\n      children: [props.children, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}, \"7Y5lBLdF9mkfoiy3F9Lk5HPUzvA=\")), \"7Y5lBLdF9mkfoiy3F9Lk5HPUzvA=\");\n_c2 = Togglable;\nTogglable.displayName = 'Togglable';\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n};\nexport default Togglable;\nvar _c, _c2;\n$RefreshReg$(_c, \"Togglable$forwardRef\");\n$RefreshReg$(_c2, \"Togglable\");","map":{"version":3,"names":["useState","useImperativeHandle","forwardRef","PropTypes","Togglable","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","console","log","toggleVisibility","buttonLabel","children","displayName","propTypes","string","isRequired"],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/src/components/Togglable.js"],"sourcesContent":["// import { useState, forwardRef, useImperativeHandle } from 'react'\n// import PropTypes from 'prop-types'\n\n\n// const Togglable = forwardRef((props, refs) => {\n//   const [visible, setVisible] = useState(false)\n\n//   const hideWhenVisible = { display: visible ? 'none' : '' }\n//   const showWhenVisible = { display: visible ? '' : 'none' }\n\n//   const toggleVisibility = () => {\n//     setVisible(!visible)\n//   }\n\n//   useImperativeHandle(refs, () => {\n//     return {\n//       toggleVisibility\n//     }\n//   })\n  \n//   Togglable.propTypes = {\n//     buttonLabel: PropTypes.string.isRequired\n//   }\n\n//   Togglable.displayName = 'Togglable'\n\n//   return (\n//     <div>\n//       <div style={hideWhenVisible}>\n//         <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n//       </div>\n//       <div style={showWhenVisible} className='togglableContent'>\n//         {props.children}\n//         <button onClick={toggleVisibility}>cancel</button>\n//       </div>\n//     </div>\n//   )\n// })\n\n// export default Togglable\n\n// // import { useState } from 'react'\n\n// // const Togglable = (props) => {\n// //   const [visible, setVisible] = useState(false)\n\n// //   const hideWhenVisible = { display: visible ? 'none' : '' }\n// //   const showWhenVisible = { display: visible ? '' : 'none' }\n\n// //   const toggleVisibility = () => {\n// //     setVisible(!visible)\n// //   }\n\n// //   return (\n// //     <div>\n// //       <div style={hideWhenVisible}>\n// //         <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n// //       </div>\n// //       <div style={showWhenVisible}>\n// //         {props.children}\n// //         <button onClick={toggleVisibility}>cancel</button>\n// //       </div>\n// //     </div>\n// //   )\n// // }\n\n// // export default Togglable\n//Cypress\nimport { useState, useImperativeHandle, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  console.log(visible)\n\n  const toggleVisibility = () => {\n    console.log('PERKELE')\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable"],"mappings":";;AAAA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAASA,QAAQ,EAAEC,mBAAmB,EAAEC,UAAU,QAAQ,OAAO;AACjE,OAAOC,SAAS,MAAM,YAAY;AAAA;AAElC,MAAMC,SAAS,iCAAGF,UAAU,SAAC,CAACG,KAAK,EAAEC,GAAG,KAAK;EAAA;EAC3C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMS,eAAe,GAAG;IAAEC,OAAO,EAAEH,OAAO,GAAG,MAAM,GAAG;EAAG,CAAC;EAC1D,MAAMI,eAAe,GAAG;IAAED,OAAO,EAAEH,OAAO,GAAG,EAAE,GAAG;EAAO,CAAC;EAE1DK,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;EAEpB,MAAMO,gBAAgB,GAAG,MAAM;IAC7BF,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBL,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAEDN,mBAAmB,CAACK,GAAG,EAAE,MAAM;IAC7B,OAAO;MACLQ;IACF,CAAC;EACH,CAAC,CAAC;EAEF,oBACE;IAAA,wBACE;MAAK,KAAK,EAAEL,eAAgB;MAAA,uBAC1B;QAAQ,OAAO,EAAEK,gBAAiB;QAAA,UAAET,KAAK,CAACU;MAAW;QAAA;QAAA;QAAA;MAAA;IAAU;MAAA;MAAA;MAAA;IAAA,QAC3D,eACN;MAAK,KAAK,EAAEJ,eAAgB;MAAC,SAAS,EAAC,kBAAkB;MAAA,WACtDN,KAAK,CAACW,QAAQ,eACf;QAAQ,OAAO,EAAEF,gBAAiB;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9C;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC,kCAAC;AAAA,MA9BIV,SAAS;AAgCfA,SAAS,CAACa,WAAW,GAAG,WAAW;AAEnCb,SAAS,CAACc,SAAS,GAAG;EACpBH,WAAW,EAAEZ,SAAS,CAACgB,MAAM,CAACC;AAChC,CAAC;AAED,eAAehB,SAAS;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}