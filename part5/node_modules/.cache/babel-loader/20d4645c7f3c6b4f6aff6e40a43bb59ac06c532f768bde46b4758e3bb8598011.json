{"ast":null,"code":"// import axios from 'axios'\n// // const jwt = require('jsonwebtoken')\n// const baseUrl = 'http://localhost:3001/api/notes'\n// // const User = require('../models/user')\n// // const Note = require('../models/note')\n\n// const getAll = () => {\n//   const request = axios.get(baseUrl)\n//   return request.then(response => response.data)\n// }\n\n// let token = null\n\n// const setToken = newToken => {\n//   token = `bearer ${newToken}`\n// }\n// // const getTokenFrom = request => {\n// //   const authorization = request.get('authorization')\n// //   if (authorization && authorization.toLowerCase().startsWith('bearer ')) {\n// //     return authorization.substring(7)\n// //   }\n// //   return null\n// // }\n\n// const create = async (newObject) => {\n//     const config = {\n//         headers: { Authorization: token },\n//       }\n\n//       const response = await axios.post(baseUrl, newObject, config)\n//       return response.data\n//     }\n\n//     //   const request = axios.post(baseUrl, newObject)\n// //   return request.then(response => response.data)\n\n// //   const body = request.body\n// //   const token = getTokenFrom(request)\n// //   const decodedToken = jwt.verify(token, process.env.SECRET)\n// //   if (!decodedToken.id) {\n// //       return response.status(401).json({ error: 'token missing or invalid' })\n// //     }\n// //     const user = await User.findById(decodedToken.id)\n\n// //     const note = new Note({\n// //         content: body.content,\n// //         important: body.important === undefined ? false : body.important,\n// //         date: new Date(),\n// //         user: user._id\n// //     })\n\n// //     const savedNote = await note.save()\n// //     await user.save()\n// //     response.status(201).json(savedNote)\n// // }\n\n// const update = (id, newObject) => {\n//   const request = axios.put(`${baseUrl}/${id}`, newObject)\n//   return request.then(response => response.data)\n// }\n\n// const noteService = {\n//     getAll,\n//     create,\n//     update,\n//     setToken\n//   }\n\n// export default noteService\n\n//Cypress Test\n// import axios from 'axios'\n// const baseUrl = '/api/notes'\n\n// let token = null\n\n// const setToken = newToken => {\n//   token = `Bearer ${newToken}`\n// }\n\n// const getAll = () => {\n//   const request = axios.get(baseUrl)\n//   return request.then(response => response.data)\n// }\n\n// const create = async newObject => {\n//   const config = {\n//     headers: { Authorization: token },\n//   }\n\n//   const response = await axios.post(baseUrl, newObject, config)\n//   return response.data\n// }\n\n// const update = (id, newObject) => {\n//   const request = axios.put(`${ baseUrl }/${id}`, newObject)\n//   return request.then(response => response.data)\n// }\n\n// // export default { getAll, create, update, setToken }\n// const noteService = {\n//       getAll,\n//       create,\n//       update,\n//       setToken\n//     }\n\n//   export default noteService","map":{"version":3,"names":[],"sources":["/Users/blakeahalt/Documents/GitHub/Full-Stack-Open-2022/fullstackopen/src/part5/src/services/notes.js"],"sourcesContent":["// import axios from 'axios'\n// // const jwt = require('jsonwebtoken')\n// const baseUrl = 'http://localhost:3001/api/notes'\n// // const User = require('../models/user')\n// // const Note = require('../models/note')\n\n// const getAll = () => {\n//   const request = axios.get(baseUrl)\n//   return request.then(response => response.data)\n// }\n\n// let token = null\n\n// const setToken = newToken => {\n//   token = `bearer ${newToken}`\n// }\n// // const getTokenFrom = request => {\n// //   const authorization = request.get('authorization')\n// //   if (authorization && authorization.toLowerCase().startsWith('bearer ')) {\n// //     return authorization.substring(7)\n// //   }\n// //   return null\n// // }\n\n// const create = async (newObject) => {\n//     const config = {\n//         headers: { Authorization: token },\n//       }\n    \n//       const response = await axios.post(baseUrl, newObject, config)\n//       return response.data\n//     }\n\n//     //   const request = axios.post(baseUrl, newObject)\n// //   return request.then(response => response.data)\n\n\n// //   const body = request.body\n// //   const token = getTokenFrom(request)\n// //   const decodedToken = jwt.verify(token, process.env.SECRET)\n// //   if (!decodedToken.id) {\n// //       return response.status(401).json({ error: 'token missing or invalid' })\n// //     }\n// //     const user = await User.findById(decodedToken.id)\n    \n// //     const note = new Note({\n// //         content: body.content,\n// //         important: body.important === undefined ? false : body.important,\n// //         date: new Date(),\n// //         user: user._id\n// //     })\n    \n// //     const savedNote = await note.save()\n// //     await user.save()\n// //     response.status(201).json(savedNote)\n// // }\n\n// const update = (id, newObject) => {\n//   const request = axios.put(`${baseUrl}/${id}`, newObject)\n//   return request.then(response => response.data)\n// }\n\n// const noteService = {\n//     getAll,\n//     create,\n//     update,\n//     setToken\n//   }\n\n// export default noteService\n\n\n//Cypress Test\n// import axios from 'axios'\n// const baseUrl = '/api/notes'\n\n// let token = null\n\n// const setToken = newToken => {\n//   token = `Bearer ${newToken}`\n// }\n\n// const getAll = () => {\n//   const request = axios.get(baseUrl)\n//   return request.then(response => response.data)\n// }\n\n// const create = async newObject => {\n//   const config = {\n//     headers: { Authorization: token },\n//   }\n\n//   const response = await axios.post(baseUrl, newObject, config)\n//   return response.data\n// }\n\n// const update = (id, newObject) => {\n//   const request = axios.put(`${ baseUrl }/${id}`, newObject)\n//   return request.then(response => response.data)\n// }\n\n// // export default { getAll, create, update, setToken }\n// const noteService = {\n//       getAll,\n//       create,\n//       update,\n//       setToken\n//     }\n  \n//   export default noteService"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}